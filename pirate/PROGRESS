# $Id$
#
# python generation progress.
# goal is to re-implement compiler/pycodegen.py
# so we need to reimplement all these methods:
#

# export DONE=`grep -E "^[ye]" PROGRESS | wc -l`
# export TOTAL=`grep -E "^[yehn]" PROGRESS | wc -l`

## these are done ###############################
y visitAssign: 
y visitBreak:
y visitCallFunc: # no */** args yet
y visitContinue:
y visitFor:      # no "else" clause yet
y visitIf:
y visitLambda:
y visitList:
y visitPrint:
y visitPrintnl:
y visitReturn:
y visitWhile:    # no "else" clause yet
y visitPass:
y visitFunction: # no */** args yet
y visitTuple:    # but makes a list for now
y visitAssName:  # in visitAssign
y visitAssTuple: # in visitAssign
y visitAssList:  # in visitAssign
y visitGlobal:
y visitListComp:
y visitListCompFor:
y visitListCompIf:
y visitDict:     # string keys only (because of PerlHash)
y visitSubscript:
y visitRaise:    # single argument only


# e just means it was done in the expression() method
# instead of its own visitXXX()
e visitExpression: 
e visitTest: used in pycodegen.py for visitAnd/visitOr
e visitAdd:
e visitAnd:
e visitCompare:
e visitConst:
e visitDiv:
e visitMod:
e visitMul:
e visitName:
e visitNot:
e visitOr:
e visitSub:


## not done yet #################################


## operators #############
n visitBackquote:
n visitBitand:
n visitBitor:
n visitBitxor:
n visitPower:
n visitLeftShift:
n visitRightShift:
n visitUnaryAdd:
n visitUnaryInvert:
n visitUnarySub:
n visitFloorDiv:
n visitInvert:


## exceptions ############
n visitAssert:
n visitTryExcept:
n visitTryFinally:


## keyword arguments #####
n visitKeyword: keyword arguments (on calling side)


## assignments ###########
n delete ( OP_DELETE in assign )
n visitAugAssign:
n visitAugName(self, node, mode):
n visitAugSubscript(self, node, mode):


## o-o stuff #############
n visitClass:
n visitAssAttr:
n visitAugGetattr(self, node, mode):
n visitGetattr:


## generators ############
n visitYield:


## slices ################
n visitSlice(self, node, aug_flag=None):
n visitSliceobj:
n visitAugSlice(self, node, mode):


## Eval ##################
n visitExec:
n visitFrom:
n visitImport:
n visitModule: 


## expressions ###########
n visitDiscard: (for free expressions, eg: "cout << 5")


## will not be supported #############
- imaginary/complex numbers (2j) (because parser can't handle it)
- visitEllipsis: extended slices (for Numeric, 2.3, etc)
