# $Id$
#
# python generation progress.
# goal is to re-implement compiler/pycodegen.py
# so we need to reimplement all these methods:
#

# export DONE=`grep -E "^[ye]" PROGRESS | wc -l`
# export TOTAL=`grep -E "^[yehn]" PROGRESS | wc -l`

## these are done ###############################
y visitAssign:
y visitBreak:
y visitCallFunc:
y visitContinue:
y visitFor: # no "else" clause yet
y visitIf:
y visitLambda:
y visitList:
y visitPrint(self, node, newline=0):
y visitPrintnl:
y visitReturn:
y visitWhile: # no "else" clause yet
y visitPass:
y visitFunction: # no closures or */** args yet

# e just means it was done in the expression() method
# instead of its own visitXXX()
e visitExpression: 
e visitAdd:
e visitAnd:
e visitCompare:
e visitConst:
e visitDiv:
e visitMod:
e visitMul:
e visitName:
e visitNot:
e visitOr:
e visitSub:


## not done yet #################################

## operators #############
n visitBackquote:
n visitBitand:
n visitBitor:
n visitBitxor:
n visitPower:
n visitLeftShift:
n visitRightShift:
n visitUnaryAdd:
n visitUnaryInvert:
n visitUnarySub:
n visitFloorDiv:
n visitInvert:


## tuples ################
# (will treat as lists for now.)
n visitAssTuple:
n visitTuple:


## dictionaries ##########
n visitDict:
n visitSubscript(self, node, aug_flag=None):
n visitKeyword: keyword arguments (on calling side)


## assignments ###########
n visitAssList:
n visitAssName:
n visitAugAssign:
n visitAugName(self, node, mode):
n visitAugSubscript(self, node, mode):


## o-o stuff #############
n visitClass:
n visitAssAttr:
n visitAugGetattr(self, node, mode):
n visitGetattr:


## exceptions ############
n visitAssert:
n visitTryExcept:
n visitTryFinally:
n visitRaise:


## global ################
n visitGlobal:  need to tag somehow? (symbols.SymbolVisitor?)


## generators ############
n visitYield:
n closures (return function/lambda)


## list comprehensions ###
n visitListComp:
n visitListCompFor:
n visitListCompIf(self, node, branch):


## slices ################
n visitSlice(self, node, aug_flag=None):
n visitSliceobj:
n visitAugSlice(self, node, mode):
n visitEllipsis: extended slices (for Numeric, 2.3, etc)


## .Eval #################
n visitExec:
n visitFrom:
n visitImport:
n visitModule: 


## expressions ###########
n visitDiscard: (for free expressions, eg: "cout << 5")


## not applicable ####################
u visitTest: used in pycodegen.py for visitAnd/visitOr
