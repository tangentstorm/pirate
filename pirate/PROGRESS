# python generation progress.
# goal is to re-implement compiler/pycodegen.py
# so we need to reimplement all these methods:
# $Id$

# export DONE=`grep -E "^[ye]" PROGRESS | wc -l`
# export TOTAL=`grep -E "^[yehn]" PROGRESS | wc -l`

## these are done ###############################
y visitAssign:
y visitBreak:
y visitCallFunc:
y visitContinue:
y visitFor:
y visitIf:
y visitLambda:
y visitList:
y visitPrint(self, node, newline=0):
y visitPrintnl:
y visitReturn:
y visitWhile: # no else clause yet
y visitPass:
y visitFunction: # no recursion/closures/nesting yet


# e just means it was done in the expression() method
# instead of its own visitXXX()
e visitAdd:
e visitAnd:
e visitCompare:
e visitConst:
e visitDiv:
e visitMod:
e visitMul:
e visitName:
e visitNot:
e visitOr:
e visitSub:


## not done yet #################################
n visitAssAttr:
n visitAssList:
n visitAssName:
n visitAssName:
n visitAssTuple:
n visitAssert:
n visitAugAssign:
n visitAugGetattr(self, node, mode):
n visitAugName(self, node, mode):
n visitAugSlice(self, node, mode):
n visitAugSubscript(self, node, mode):
n visitBackquote:
n visitBitand:
n visitBitor:
n visitBitxor:
n visitClass:
n visitDict:
n visitExec:
n visitFrom:
n visitGetattr:
n visitGlobal:
n visitImport:
n visitLeftShift:
n visitListComp:
n visitListCompFor:
n visitListCompIf(self, node, branch):
n visitModule:
n visitPower:
n visitRaise:
n visitRightShift:
n visitSlice(self, node, aug_flag=None):
n visitSliceobj:
n visitTryExcept:
n visitTryFinally:
n visitTuple:
n visitUnaryAdd:
n visitUnaryInvert:
n visitUnarySub:
n visitYield:

## not sure what these mean ####################
# (haven't looked at the code yet)
u visitDiscard:
u visitEllipsis:
u visitExpression:
u visitFloorDiv:
u visitInvert:
u visitKeyword:
u visitSubscript(self, node, aug_flag=None):
u visitTest:
