 Define.eval('{}, {}')
  Node.isgenerator('')
  return False
  Node.isgenerator('')
  return False
 return
 Define.eval("{'heappush': <Function object at 0>}, {'heappush': <Function object at 0>}")
  Node.isgenerator('')
  return False
  If.isgenerator('')
   Node.isgenerator('')
   return False
   Node.isgenerator('')
   return False
   Node.isgenerator('')
   return False
   Node.isgenerator('')
   return False
  return False
  Node.isgenerator('')
  return False
 return
 Define.eval("{'heappop': <Functio...nction object at 0>}, {'heappop': <Functio...nction object at 0>}")
  Node.isgenerator('')
  return False
  Node.isgenerator('')
  return False
  Node.isgenerator('')
  return False
  Node.isgenerator('')
  return False
 return
 Define.eval("{'heappop': <Functio...nction object at 0>}, {'heappop': <Functio...nction object at 0>}")
  Node.isgenerator('')
  return False
  Node.isgenerator('')
  return False
 return
 Define.eval("{'heapify': <Functio...nction object at 0>}, {'heapify': <Functio...nction object at 0>}")
  Node.isgenerator('')
  return False
  While.isgenerator('')
   Node.isgenerator('')
   return False
   Node.isgenerator('')
   return False
   If.isgenerator('')
    Node.isgenerator('')
    return False
   return False
   Node.isgenerator('')
   return False
   Node.isgenerator('')
   return False
  return False
  Node.isgenerator('')
  return False
 return
 Define.eval("{'_siftdown': <Funct...nction object at 0>}, {'_siftdown': <Funct...nction object at 0>}")
  Node.isgenerator('')
  return False
  Node.isgenerator('')
  return False
  Node.isgenerator('')
  return False
  Node.isgenerator('')
  return False
  While.isgenerator('')
   Node.isgenerator('')
   return False
   If.isgenerator('')
    If.isgenerator('')
     Node.isgenerator('')
     return False
    return False
   return False
   Node.isgenerator('')
   return False
   Node.isgenerator('')
   return False
   Node.isgenerator('')
   return False
  return False
  Node.isgenerator('')
  return False
  Node.isgenerator('')
  return False
 return
 Call.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [], 'item': 1}")
  Attribute.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [], 'item': 1}")
   Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [], 'item': 1}")
   return []
  return <built-in method append of list object at 0>
  Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [], 'item': 1}")
  return 1
 return
 Call.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1], 'item': 1}")
  Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1], 'item': 1}")
  return <Function object at 0>
  Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1], 'item': 1}")
  return [1]
  Literal.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1], 'item': 1}")
  return 0
  Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1], 'item': 1}")
   Call.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1], 'item': 1}")
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1], 'item': 1}")
    return <built-in function len>
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1], 'item': 1}")
    return [1]
   return 1
   Literal.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1], 'item': 1}")
   return 1
  return 0
  Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1], 'pos': 0, 'startpos': 0}")
   Index.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1], 'pos': 0, 'startpos': 0}")
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1], 'pos': 0, 'startpos': 0}")
    return [1]
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1], 'pos': 0, 'startpos': 0}")
    return 0
   return 1
   Name.assign("1, {'_siftdown': <Funct...nction object at 0>}, {'heap': [1], 'pos': 0, 'startpos': 0}")
   return
  return
  While.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1], 'newit...': 0, 'startpos': 0}")
   Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1], 'newit...': 0, 'startpos': 0}")
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1], 'newit...': 0, 'startpos': 0}")
    return 0
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1], 'newit...': 0, 'startpos': 0}")
    return 0
   return False
  return
  Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1], 'newit...': 0, 'startpos': 0}")
   Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1], 'newit...': 0, 'startpos': 0}")
   return 1
   Index.assign("1, {'_siftdown': <Funct...nction object at 0>}, {'heap': [1], 'newit...': 0, 'startpos': 0}")
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1], 'newit...': 0, 'startpos': 0}")
    return [1]
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1], 'newit...': 0, 'startpos': 0}")
    return 0
   return
  return
 return
 Call.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1], 'item': 3}")
  Attribute.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1], 'item': 3}")
   Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1], 'item': 3}")
   return [1]
  return <built-in method append of list object at 0>
  Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1], 'item': 3}")
  return 3
 return
 Call.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3], 'item': 3}")
  Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3], 'item': 3}")
  return <Function object at 0>
  Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3], 'item': 3}")
  return [1, 3]
  Literal.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3], 'item': 3}")
  return 0
  Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3], 'item': 3}")
   Call.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3], 'item': 3}")
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3], 'item': 3}")
    return <built-in function len>
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3], 'item': 3}")
    return [1, 3]
   return 2
   Literal.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3], 'item': 3}")
   return 1
  return 1
  Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3], 'pos': 1, 'startpos': 0}")
   Index.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3], 'pos': 1, 'startpos': 0}")
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3], 'pos': 1, 'startpos': 0}")
    return [1, 3]
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3], 'pos': 1, 'startpos': 0}")
    return 1
   return 3
   Name.assign("3, {'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3], 'pos': 1, 'startpos': 0}")
   return
  return
  While.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3], 'ne...': 1, 'startpos': 0}")
   Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3], 'ne...': 1, 'startpos': 0}")
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3], 'ne...': 1, 'startpos': 0}")
    return 1
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3], 'ne...': 1, 'startpos': 0}")
    return 0
   return True
   Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3], 'ne...': 1, 'startpos': 0}")
    Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3], 'ne...': 1, 'startpos': 0}")
     Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3], 'ne...': 1, 'startpos': 0}")
      Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3], 'ne...': 1, 'startpos': 0}")
      return 1
      Literal.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3], 'ne...': 1, 'startpos': 0}")
      return 1
     return 0
     Literal.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3], 'ne...': 1, 'startpos': 0}")
     return 1
    return 0
    Name.assign("0, {'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3], 'ne...': 1, 'startpos': 0}")
    return
   return
   Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3], 'ne...': 1, 'startpos': 0}")
    Index.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3], 'ne...': 1, 'startpos': 0}")
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3], 'ne...': 1, 'startpos': 0}")
     return [1, 3]
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3], 'ne...': 1, 'startpos': 0}")
     return 0
    return 1
    Name.assign("1, {'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3], 'ne...': 1, 'startpos': 0}")
    return
   return
   If.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3], 'ne...': 1, 'startpos': 0}")
    Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3], 'ne...': 1, 'startpos': 0}")
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3], 'ne...': 1, 'startpos': 0}")
     return 1
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3], 'ne...': 1, 'startpos': 0}")
     return 3
    return True
    Break.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3], 'ne...': 1, 'startpos': 0}")
    raise <DoBreak instance at 0>
   raise <DoBreak instance at 0>
  return
  Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3], 'ne...': 1, 'startpos': 0}")
   Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3], 'ne...': 1, 'startpos': 0}")
   return 3
   Index.assign("3, {'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3], 'ne...': 1, 'startpos': 0}")
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3], 'ne...': 1, 'startpos': 0}")
    return [1, 3]
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3], 'ne...': 1, 'startpos': 0}")
    return 1
   return
  return
 return
 Call.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3], 'item': 5}")
  Attribute.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3], 'item': 5}")
   Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3], 'item': 5}")
   return [1, 3]
  return <built-in method append of list object at 0>
  Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3], 'item': 5}")
  return 5
 return
 Call.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5], 'item': 5}")
  Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5], 'item': 5}")
  return <Function object at 0>
  Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5], 'item': 5}")
  return [1, 3, 5]
  Literal.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5], 'item': 5}")
  return 0
  Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5], 'item': 5}")
   Call.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5], 'item': 5}")
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5], 'item': 5}")
    return <built-in function len>
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5], 'item': 5}")
    return [1, 3, 5]
   return 3
   Literal.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5], 'item': 5}")
   return 1
  return 2
  Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5], 'pos': 2, 'startpos': 0}")
   Index.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5], 'pos': 2, 'startpos': 0}")
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5], 'pos': 2, 'startpos': 0}")
    return [1, 3, 5]
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5], 'pos': 2, 'startpos': 0}")
    return 2
   return 5
   Name.assign("5, {'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5], 'pos': 2, 'startpos': 0}")
   return
  return
  While.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5], ...': 2, 'startpos': 0}")
   Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5], ...': 2, 'startpos': 0}")
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5], ...': 2, 'startpos': 0}")
    return 2
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5], ...': 2, 'startpos': 0}")
    return 0
   return True
   Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5], ...': 2, 'startpos': 0}")
    Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5], ...': 2, 'startpos': 0}")
     Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5], ...': 2, 'startpos': 0}")
      Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5], ...': 2, 'startpos': 0}")
      return 2
      Literal.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5], ...': 2, 'startpos': 0}")
      return 1
     return 1
     Literal.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5], ...': 2, 'startpos': 0}")
     return 1
    return 0
    Name.assign("0, {'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5], ...': 2, 'startpos': 0}")
    return
   return
   Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5], ...': 2, 'startpos': 0}")
    Index.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5], ...': 2, 'startpos': 0}")
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5], ...': 2, 'startpos': 0}")
     return [1, 3, 5]
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5], ...': 2, 'startpos': 0}")
     return 0
    return 1
    Name.assign("1, {'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5], ...': 2, 'startpos': 0}")
    return
   return
   If.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5], ...': 2, 'startpos': 0}")
    Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5], ...': 2, 'startpos': 0}")
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5], ...': 2, 'startpos': 0}")
     return 1
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5], ...': 2, 'startpos': 0}")
     return 5
    return True
    Break.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5], ...': 2, 'startpos': 0}")
    raise <DoBreak instance at 0>
   raise <DoBreak instance at 0>
  return
  Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5], ...': 2, 'startpos': 0}")
   Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5], ...': 2, 'startpos': 0}")
   return 5
   Index.assign("5, {'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5], ...': 2, 'startpos': 0}")
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5], ...': 2, 'startpos': 0}")
    return [1, 3, 5]
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5], ...': 2, 'startpos': 0}")
    return 2
   return
  return
 return
 Call.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5], 'item': 7}")
  Attribute.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5], 'item': 7}")
   Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5], 'item': 7}")
   return [1, 3, 5]
  return <built-in method append of list object at 0>
  Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5], 'item': 7}")
  return 7
 return
 Call.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5, 7], 'item': 7}")
  Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5, 7], 'item': 7}")
  return <Function object at 0>
  Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5, 7], 'item': 7}")
  return [1, 3, 5, 7]
  Literal.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5, 7], 'item': 7}")
  return 0
  Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5, 7], 'item': 7}")
   Call.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5, 7], 'item': 7}")
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5, 7], 'item': 7}")
    return <built-in function len>
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5, 7], 'item': 7}")
    return [1, 3, 5, 7]
   return 4
   Literal.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5, 7], 'item': 7}")
   return 1
  return 3
  Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5, 7...': 3, 'startpos': 0}")
   Index.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5, 7...': 3, 'startpos': 0}")
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5, 7...': 3, 'startpos': 0}")
    return [1, 3, 5, 7]
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5, 7...': 3, 'startpos': 0}")
    return 3
   return 7
   Name.assign("7, {'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5, 7...': 3, 'startpos': 0}")
   return
  return
  While.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5, 7...': 3, 'startpos': 0}")
   Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5, 7...': 3, 'startpos': 0}")
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5, 7...': 3, 'startpos': 0}")
    return 3
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5, 7...': 3, 'startpos': 0}")
    return 0
   return True
   Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5, 7...': 3, 'startpos': 0}")
    Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5, 7...': 3, 'startpos': 0}")
     Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5, 7...': 3, 'startpos': 0}")
      Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5, 7...': 3, 'startpos': 0}")
      return 3
      Literal.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5, 7...': 3, 'startpos': 0}")
      return 1
     return 2
     Literal.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5, 7...': 3, 'startpos': 0}")
     return 1
    return 1
    Name.assign("1, {'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5, 7...': 3, 'startpos': 0}")
    return
   return
   Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5, 7...': 3, 'startpos': 0}")
    Index.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5, 7...': 3, 'startpos': 0}")
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5, 7...': 3, 'startpos': 0}")
     return [1, 3, 5, 7]
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5, 7...': 3, 'startpos': 0}")
     return 1
    return 3
    Name.assign("3, {'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5, 7...': 3, 'startpos': 0}")
    return
   return
   If.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5, 7...': 3, 'startpos': 0}")
    Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5, 7...': 3, 'startpos': 0}")
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5, 7...': 3, 'startpos': 0}")
     return 3
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5, 7...': 3, 'startpos': 0}")
     return 7
    return True
    Break.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5, 7...': 3, 'startpos': 0}")
    raise <DoBreak instance at 0>
   raise <DoBreak instance at 0>
  return
  Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5, 7...': 3, 'startpos': 0}")
   Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5, 7...': 3, 'startpos': 0}")
   return 7
   Index.assign("7, {'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5, 7...': 3, 'startpos': 0}")
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5, 7...': 3, 'startpos': 0}")
    return [1, 3, 5, 7]
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5, 7...': 3, 'startpos': 0}")
    return 3
   return
  return
 return
 Call.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5, 7], 'item': 9}")
  Attribute.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5, 7], 'item': 9}")
   Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5, 7], 'item': 9}")
   return [1, 3, 5, 7]
  return <built-in method append of list object at 0>
  Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5, 7], 'item': 9}")
  return 9
 return
 Call.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5, 7, 9], 'item': 9}")
  Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5, 7, 9], 'item': 9}")
  return <Function object at 0>
  Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5, 7, 9], 'item': 9}")
  return [1, 3, 5, 7, 9]
  Literal.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5, 7, 9], 'item': 9}")
  return 0
  Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5, 7, 9], 'item': 9}")
   Call.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5, 7, 9], 'item': 9}")
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5, 7, 9], 'item': 9}")
    return <built-in function len>
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5, 7, 9], 'item': 9}")
    return [1, 3, 5, 7, 9]
   return 5
   Literal.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5, 7, 9], 'item': 9}")
   return 1
  return 4
  Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5, 7...': 4, 'startpos': 0}")
   Index.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5, 7...': 4, 'startpos': 0}")
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5, 7...': 4, 'startpos': 0}")
    return [1, 3, 5, 7, 9]
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5, 7...': 4, 'startpos': 0}")
    return 4
   return 9
   Name.assign("9, {'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5, 7...': 4, 'startpos': 0}")
   return
  return
  While.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5, 7...': 4, 'startpos': 0}")
   Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5, 7...': 4, 'startpos': 0}")
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5, 7...': 4, 'startpos': 0}")
    return 4
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5, 7...': 4, 'startpos': 0}")
    return 0
   return True
   Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5, 7...': 4, 'startpos': 0}")
    Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5, 7...': 4, 'startpos': 0}")
     Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5, 7...': 4, 'startpos': 0}")
      Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5, 7...': 4, 'startpos': 0}")
      return 4
      Literal.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5, 7...': 4, 'startpos': 0}")
      return 1
     return 3
     Literal.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5, 7...': 4, 'startpos': 0}")
     return 1
    return 1
    Name.assign("1, {'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5, 7...': 4, 'startpos': 0}")
    return
   return
   Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5, 7...': 4, 'startpos': 0}")
    Index.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5, 7...': 4, 'startpos': 0}")
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5, 7...': 4, 'startpos': 0}")
     return [1, 3, 5, 7, 9]
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5, 7...': 4, 'startpos': 0}")
     return 1
    return 3
    Name.assign("3, {'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5, 7...': 4, 'startpos': 0}")
    return
   return
   If.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5, 7...': 4, 'startpos': 0}")
    Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5, 7...': 4, 'startpos': 0}")
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5, 7...': 4, 'startpos': 0}")
     return 3
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5, 7...': 4, 'startpos': 0}")
     return 9
    return True
    Break.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5, 7...': 4, 'startpos': 0}")
    raise <DoBreak instance at 0>
   raise <DoBreak instance at 0>
  return
  Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5, 7...': 4, 'startpos': 0}")
   Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5, 7...': 4, 'startpos': 0}")
   return 9
   Index.assign("9, {'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5, 7...': 4, 'startpos': 0}")
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5, 7...': 4, 'startpos': 0}")
    return [1, 3, 5, 7, 9]
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5, 7...': 4, 'startpos': 0}")
    return 4
   return
  return
 return
 Call.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5, 7, 9], 'item': 2}")
  Attribute.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5, 7, 9], 'item': 2}")
   Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5, 7, 9], 'item': 2}")
   return [1, 3, 5, 7, 9]
  return <built-in method append of list object at 0>
  Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5, 7, 9], 'item': 2}")
  return 2
 return
 Call.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5, 7, 9, 2], 'item': 2}")
  Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5, 7, 9, 2], 'item': 2}")
  return <Function object at 0>
  Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5, 7, 9, 2], 'item': 2}")
  return [1, 3, 5, 7, 9, 2]
  Literal.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5, 7, 9, 2], 'item': 2}")
  return 0
  Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5, 7, 9, 2], 'item': 2}")
   Call.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5, 7, 9, 2], 'item': 2}")
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5, 7, 9, 2], 'item': 2}")
    return <built-in function len>
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5, 7, 9, 2], 'item': 2}")
    return [1, 3, 5, 7, 9, 2]
   return 6
   Literal.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5, 7, 9, 2], 'item': 2}")
   return 1
  return 5
  Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5, 7...': 5, 'startpos': 0}")
   Index.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5, 7...': 5, 'startpos': 0}")
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5, 7...': 5, 'startpos': 0}")
    return [1, 3, 5, 7, 9, 2]
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5, 7...': 5, 'startpos': 0}")
    return 5
   return 2
   Name.assign("2, {'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5, 7...': 5, 'startpos': 0}")
   return
  return
  While.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5, 7...': 5, 'startpos': 0}")
   Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5, 7...': 5, 'startpos': 0}")
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5, 7...': 5, 'startpos': 0}")
    return 5
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5, 7...': 5, 'startpos': 0}")
    return 0
   return True
   Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5, 7...': 5, 'startpos': 0}")
    Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5, 7...': 5, 'startpos': 0}")
     Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5, 7...': 5, 'startpos': 0}")
      Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5, 7...': 5, 'startpos': 0}")
      return 5
      Literal.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5, 7...': 5, 'startpos': 0}")
      return 1
     return 4
     Literal.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5, 7...': 5, 'startpos': 0}")
     return 1
    return 2
    Name.assign("2, {'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5, 7...': 5, 'startpos': 0}")
    return
   return
   Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5, 7...': 5, 'startpos': 0}")
    Index.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5, 7...': 5, 'startpos': 0}")
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5, 7...': 5, 'startpos': 0}")
     return [1, 3, 5, 7, 9, 2]
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5, 7...': 5, 'startpos': 0}")
     return 2
    return 5
    Name.assign("5, {'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5, 7...': 5, 'startpos': 0}")
    return
   return
   If.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5, 7...': 5, 'startpos': 0}")
    Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5, 7...': 5, 'startpos': 0}")
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5, 7...': 5, 'startpos': 0}")
     return 5
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5, 7...': 5, 'startpos': 0}")
     return 2
    return False
   return
   Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5, 7...': 5, 'startpos': 0}")
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5, 7...': 5, 'startpos': 0}")
    return 5
    Index.assign("5, {'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5, 7...': 5, 'startpos': 0}")
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5, 7...': 5, 'startpos': 0}")
     return [1, 3, 5, 7, 9, 2]
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5, 7...': 5, 'startpos': 0}")
     return 5
    return
   return
   Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5, 7...': 5, 'startpos': 0}")
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5, 7...': 5, 'startpos': 0}")
    return 2
    Name.assign("2, {'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5, 7...': 5, 'startpos': 0}")
    return
   return
   Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5, 7...': 2, 'startpos': 0}")
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5, 7...': 2, 'startpos': 0}")
    return 2
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5, 7...': 2, 'startpos': 0}")
    return 0
   return True
   Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5, 7...': 2, 'startpos': 0}")
    Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5, 7...': 2, 'startpos': 0}")
     Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5, 7...': 2, 'startpos': 0}")
      Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5, 7...': 2, 'startpos': 0}")
      return 2
      Literal.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5, 7...': 2, 'startpos': 0}")
      return 1
     return 1
     Literal.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5, 7...': 2, 'startpos': 0}")
     return 1
    return 0
    Name.assign("0, {'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5, 7...': 2, 'startpos': 0}")
    return
   return
   Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5, 7...': 2, 'startpos': 0}")
    Index.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5, 7...': 2, 'startpos': 0}")
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5, 7...': 2, 'startpos': 0}")
     return [1, 3, 5, 7, 9, 5]
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5, 7...': 2, 'startpos': 0}")
     return 0
    return 1
    Name.assign("1, {'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5, 7...': 2, 'startpos': 0}")
    return
   return
   If.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5, 7...': 2, 'startpos': 0}")
    Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5, 7...': 2, 'startpos': 0}")
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5, 7...': 2, 'startpos': 0}")
     return 1
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5, 7...': 2, 'startpos': 0}")
     return 2
    return True
    Break.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5, 7...': 2, 'startpos': 0}")
    raise <DoBreak instance at 0>
   raise <DoBreak instance at 0>
  return
  Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5, 7...': 2, 'startpos': 0}")
   Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5, 7...': 2, 'startpos': 0}")
   return 2
   Index.assign("2, {'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5, 7...': 2, 'startpos': 0}")
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5, 7...': 2, 'startpos': 0}")
    return [1, 3, 5, 7, 9, 5]
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 5, 7...': 2, 'startpos': 0}")
    return 2
   return
  return
 return
 Call.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 7, 9, 5], 'item': 4}")
  Attribute.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 7, 9, 5], 'item': 4}")
   Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 7, 9, 5], 'item': 4}")
   return [1, 3, 2, 7, 9, 5]
  return <built-in method append of list object at 0>
  Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 7, 9, 5], 'item': 4}")
  return 4
 return
 Call.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 7, 9, 5, 4], 'item': 4}")
  Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 7, 9, 5, 4], 'item': 4}")
  return <Function object at 0>
  Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 7, 9, 5, 4], 'item': 4}")
  return [1, 3, 2, 7, 9, 5, 4]
  Literal.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 7, 9, 5, 4], 'item': 4}")
  return 0
  Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 7, 9, 5, 4], 'item': 4}")
   Call.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 7, 9, 5, 4], 'item': 4}")
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 7, 9, 5, 4], 'item': 4}")
    return <built-in function len>
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 7, 9, 5, 4], 'item': 4}")
    return [1, 3, 2, 7, 9, 5, 4]
   return 7
   Literal.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 7, 9, 5, 4], 'item': 4}")
   return 1
  return 6
  Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 7...': 6, 'startpos': 0}")
   Index.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 7...': 6, 'startpos': 0}")
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 7...': 6, 'startpos': 0}")
    return [1, 3, 2, 7, 9, 5, 4]
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 7...': 6, 'startpos': 0}")
    return 6
   return 4
   Name.assign("4, {'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 7...': 6, 'startpos': 0}")
   return
  return
  While.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 7...': 6, 'startpos': 0}")
   Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 7...': 6, 'startpos': 0}")
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 7...': 6, 'startpos': 0}")
    return 6
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 7...': 6, 'startpos': 0}")
    return 0
   return True
   Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 7...': 6, 'startpos': 0}")
    Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 7...': 6, 'startpos': 0}")
     Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 7...': 6, 'startpos': 0}")
      Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 7...': 6, 'startpos': 0}")
      return 6
      Literal.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 7...': 6, 'startpos': 0}")
      return 1
     return 5
     Literal.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 7...': 6, 'startpos': 0}")
     return 1
    return 2
    Name.assign("2, {'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 7...': 6, 'startpos': 0}")
    return
   return
   Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 7...': 6, 'startpos': 0}")
    Index.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 7...': 6, 'startpos': 0}")
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 7...': 6, 'startpos': 0}")
     return [1, 3, 2, 7, 9, 5, 4]
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 7...': 6, 'startpos': 0}")
     return 2
    return 2
    Name.assign("2, {'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 7...': 6, 'startpos': 0}")
    return
   return
   If.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 7...': 6, 'startpos': 0}")
    Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 7...': 6, 'startpos': 0}")
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 7...': 6, 'startpos': 0}")
     return 2
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 7...': 6, 'startpos': 0}")
     return 4
    return True
    Break.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 7...': 6, 'startpos': 0}")
    raise <DoBreak instance at 0>
   raise <DoBreak instance at 0>
  return
  Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 7...': 6, 'startpos': 0}")
   Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 7...': 6, 'startpos': 0}")
   return 4
   Index.assign("4, {'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 7...': 6, 'startpos': 0}")
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 7...': 6, 'startpos': 0}")
    return [1, 3, 2, 7, 9, 5, 4]
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 7...': 6, 'startpos': 0}")
    return 6
   return
  return
 return
 Call.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 7, 9, 5, 4], 'item': 6}")
  Attribute.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 7, 9, 5, 4], 'item': 6}")
   Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 7, 9, 5, 4], 'item': 6}")
   return [1, 3, 2, 7, 9, 5, 4]
  return <built-in method append of list object at 0>
  Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 7, 9, 5, 4], 'item': 6}")
  return 6
 return
 Call.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 7...5, 4, 6], 'item': 6}")
  Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 7...5, 4, 6], 'item': 6}")
  return <Function object at 0>
  Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 7...5, 4, 6], 'item': 6}")
  return [1, 3, 2, 7, 9, 5, 4, 6]
  Literal.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 7...5, 4, 6], 'item': 6}")
  return 0
  Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 7...5, 4, 6], 'item': 6}")
   Call.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 7...5, 4, 6], 'item': 6}")
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 7...5, 4, 6], 'item': 6}")
    return <built-in function len>
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 7...5, 4, 6], 'item': 6}")
    return [1, 3, 2, 7, 9, 5, 4, 6]
   return 8
   Literal.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 7...5, 4, 6], 'item': 6}")
   return 1
  return 7
  Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 7...': 7, 'startpos': 0}")
   Index.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 7...': 7, 'startpos': 0}")
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 7...': 7, 'startpos': 0}")
    return [1, 3, 2, 7, 9, 5, 4, 6]
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 7...': 7, 'startpos': 0}")
    return 7
   return 6
   Name.assign("6, {'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 7...': 7, 'startpos': 0}")
   return
  return
  While.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 7...': 7, 'startpos': 0}")
   Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 7...': 7, 'startpos': 0}")
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 7...': 7, 'startpos': 0}")
    return 7
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 7...': 7, 'startpos': 0}")
    return 0
   return True
   Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 7...': 7, 'startpos': 0}")
    Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 7...': 7, 'startpos': 0}")
     Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 7...': 7, 'startpos': 0}")
      Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 7...': 7, 'startpos': 0}")
      return 7
      Literal.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 7...': 7, 'startpos': 0}")
      return 1
     return 6
     Literal.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 7...': 7, 'startpos': 0}")
     return 1
    return 3
    Name.assign("3, {'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 7...': 7, 'startpos': 0}")
    return
   return
   Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 7...': 7, 'startpos': 0}")
    Index.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 7...': 7, 'startpos': 0}")
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 7...': 7, 'startpos': 0}")
     return [1, 3, 2, 7, 9, 5, 4, 6]
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 7...': 7, 'startpos': 0}")
     return 3
    return 7
    Name.assign("7, {'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 7...': 7, 'startpos': 0}")
    return
   return
   If.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 7...': 7, 'startpos': 0}")
    Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 7...': 7, 'startpos': 0}")
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 7...': 7, 'startpos': 0}")
     return 7
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 7...': 7, 'startpos': 0}")
     return 6
    return False
   return
   Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 7...': 7, 'startpos': 0}")
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 7...': 7, 'startpos': 0}")
    return 7
    Index.assign("7, {'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 7...': 7, 'startpos': 0}")
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 7...': 7, 'startpos': 0}")
     return [1, 3, 2, 7, 9, 5, 4, 6]
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 7...': 7, 'startpos': 0}")
     return 7
    return
   return
   Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 7...': 7, 'startpos': 0}")
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 7...': 7, 'startpos': 0}")
    return 3
    Name.assign("3, {'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 7...': 7, 'startpos': 0}")
    return
   return
   Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 7...': 3, 'startpos': 0}")
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 7...': 3, 'startpos': 0}")
    return 3
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 7...': 3, 'startpos': 0}")
    return 0
   return True
   Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 7...': 3, 'startpos': 0}")
    Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 7...': 3, 'startpos': 0}")
     Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 7...': 3, 'startpos': 0}")
      Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 7...': 3, 'startpos': 0}")
      return 3
      Literal.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 7...': 3, 'startpos': 0}")
      return 1
     return 2
     Literal.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 7...': 3, 'startpos': 0}")
     return 1
    return 1
    Name.assign("1, {'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 7...': 3, 'startpos': 0}")
    return
   return
   Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 7...': 3, 'startpos': 0}")
    Index.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 7...': 3, 'startpos': 0}")
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 7...': 3, 'startpos': 0}")
     return [1, 3, 2, 7, 9, 5, 4, 7]
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 7...': 3, 'startpos': 0}")
     return 1
    return 3
    Name.assign("3, {'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 7...': 3, 'startpos': 0}")
    return
   return
   If.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 7...': 3, 'startpos': 0}")
    Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 7...': 3, 'startpos': 0}")
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 7...': 3, 'startpos': 0}")
     return 3
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 7...': 3, 'startpos': 0}")
     return 6
    return True
    Break.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 7...': 3, 'startpos': 0}")
    raise <DoBreak instance at 0>
   raise <DoBreak instance at 0>
  return
  Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 7...': 3, 'startpos': 0}")
   Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 7...': 3, 'startpos': 0}")
   return 6
   Index.assign("6, {'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 7...': 3, 'startpos': 0}")
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 7...': 3, 'startpos': 0}")
    return [1, 3, 2, 7, 9, 5, 4, 7]
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 7...': 3, 'startpos': 0}")
    return 3
   return
  return
 return
 Call.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...5, 4, 7], 'item': 8}")
  Attribute.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...5, 4, 7], 'item': 8}")
   Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...5, 4, 7], 'item': 8}")
   return [1, 3, 2, 6, 9, 5, 4, 7]
  return <built-in method append of list object at 0>
  Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...5, 4, 7], 'item': 8}")
  return 8
 return
 Call.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...4, 7, 8], 'item': 8}")
  Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...4, 7, 8], 'item': 8}")
  return <Function object at 0>
  Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...4, 7, 8], 'item': 8}")
  return [1, 3, 2, 6, 9, 5, 4, 7, 8]
  Literal.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...4, 7, 8], 'item': 8}")
  return 0
  Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...4, 7, 8], 'item': 8}")
   Call.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...4, 7, 8], 'item': 8}")
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...4, 7, 8], 'item': 8}")
    return <built-in function len>
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...4, 7, 8], 'item': 8}")
    return [1, 3, 2, 6, 9, 5, 4, 7, 8]
   return 9
   Literal.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...4, 7, 8], 'item': 8}")
   return 1
  return 8
  Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...': 8, 'startpos': 0}")
   Index.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...': 8, 'startpos': 0}")
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...': 8, 'startpos': 0}")
    return [1, 3, 2, 6, 9, 5, 4, 7, 8]
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...': 8, 'startpos': 0}")
    return 8
   return 8
   Name.assign("8, {'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...': 8, 'startpos': 0}")
   return
  return
  While.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...': 8, 'startpos': 0}")
   Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...': 8, 'startpos': 0}")
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...': 8, 'startpos': 0}")
    return 8
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...': 8, 'startpos': 0}")
    return 0
   return True
   Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...': 8, 'startpos': 0}")
    Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...': 8, 'startpos': 0}")
     Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...': 8, 'startpos': 0}")
      Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...': 8, 'startpos': 0}")
      return 8
      Literal.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...': 8, 'startpos': 0}")
      return 1
     return 7
     Literal.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...': 8, 'startpos': 0}")
     return 1
    return 3
    Name.assign("3, {'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...': 8, 'startpos': 0}")
    return
   return
   Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...': 8, 'startpos': 0}")
    Index.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...': 8, 'startpos': 0}")
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...': 8, 'startpos': 0}")
     return [1, 3, 2, 6, 9, 5, 4, 7, 8]
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...': 8, 'startpos': 0}")
     return 3
    return 6
    Name.assign("6, {'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...': 8, 'startpos': 0}")
    return
   return
   If.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...': 8, 'startpos': 0}")
    Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...': 8, 'startpos': 0}")
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...': 8, 'startpos': 0}")
     return 6
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...': 8, 'startpos': 0}")
     return 8
    return True
    Break.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...': 8, 'startpos': 0}")
    raise <DoBreak instance at 0>
   raise <DoBreak instance at 0>
  return
  Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...': 8, 'startpos': 0}")
   Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...': 8, 'startpos': 0}")
   return 8
   Index.assign("8, {'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...': 8, 'startpos': 0}")
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...': 8, 'startpos': 0}")
    return [1, 3, 2, 6, 9, 5, 4, 7, 8]
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...': 8, 'startpos': 0}")
    return 8
   return
  return
 return
 Call.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...4, 7, 8], 'item': 0}")
  Attribute.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...4, 7, 8], 'item': 0}")
   Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...4, 7, 8], 'item': 0}")
   return [1, 3, 2, 6, 9, 5, 4, 7, 8]
  return <built-in method append of list object at 0>
  Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...4, 7, 8], 'item': 0}")
  return 0
 return
 Call.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...7, 8, 0], 'item': 0}")
  Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...7, 8, 0], 'item': 0}")
  return <Function object at 0>
  Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...7, 8, 0], 'item': 0}")
  return [1, 3, 2, 6, 9, 5, 4, 7, 8, 0]
  Literal.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...7, 8, 0], 'item': 0}")
  return 0
  Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...7, 8, 0], 'item': 0}")
   Call.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...7, 8, 0], 'item': 0}")
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...7, 8, 0], 'item': 0}")
    return <built-in function len>
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...7, 8, 0], 'item': 0}")
    return [1, 3, 2, 6, 9, 5, 4, 7, 8, 0]
   return 10
   Literal.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...7, 8, 0], 'item': 0}")
   return 1
  return 9
  Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...': 9, 'startpos': 0}")
   Index.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...': 9, 'startpos': 0}")
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...': 9, 'startpos': 0}")
    return [1, 3, 2, 6, 9, 5, 4, 7, 8, 0]
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...': 9, 'startpos': 0}")
    return 9
   return 0
   Name.assign("0, {'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...': 9, 'startpos': 0}")
   return
  return
  While.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...': 9, 'startpos': 0}")
   Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...': 9, 'startpos': 0}")
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...': 9, 'startpos': 0}")
    return 9
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...': 9, 'startpos': 0}")
    return 0
   return True
   Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...': 9, 'startpos': 0}")
    Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...': 9, 'startpos': 0}")
     Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...': 9, 'startpos': 0}")
      Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...': 9, 'startpos': 0}")
      return 9
      Literal.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...': 9, 'startpos': 0}")
      return 1
     return 8
     Literal.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...': 9, 'startpos': 0}")
     return 1
    return 4
    Name.assign("4, {'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...': 9, 'startpos': 0}")
    return
   return
   Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...': 9, 'startpos': 0}")
    Index.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...': 9, 'startpos': 0}")
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...': 9, 'startpos': 0}")
     return [1, 3, 2, 6, 9, 5, 4, 7, 8, 0]
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...': 9, 'startpos': 0}")
     return 4
    return 9
    Name.assign("9, {'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...': 9, 'startpos': 0}")
    return
   return
   If.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...': 9, 'startpos': 0}")
    Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...': 9, 'startpos': 0}")
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...': 9, 'startpos': 0}")
     return 9
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...': 9, 'startpos': 0}")
     return 0
    return False
   return
   Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...': 9, 'startpos': 0}")
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...': 9, 'startpos': 0}")
    return 9
    Index.assign("9, {'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...': 9, 'startpos': 0}")
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...': 9, 'startpos': 0}")
     return [1, 3, 2, 6, 9, 5, 4, 7, 8, 0]
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...': 9, 'startpos': 0}")
     return 9
    return
   return
   Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...': 9, 'startpos': 0}")
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...': 9, 'startpos': 0}")
    return 4
    Name.assign("4, {'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...': 9, 'startpos': 0}")
    return
   return
   Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...': 4, 'startpos': 0}")
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...': 4, 'startpos': 0}")
    return 4
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...': 4, 'startpos': 0}")
    return 0
   return True
   Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...': 4, 'startpos': 0}")
    Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...': 4, 'startpos': 0}")
     Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...': 4, 'startpos': 0}")
      Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...': 4, 'startpos': 0}")
      return 4
      Literal.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...': 4, 'startpos': 0}")
      return 1
     return 3
     Literal.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...': 4, 'startpos': 0}")
     return 1
    return 1
    Name.assign("1, {'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...': 4, 'startpos': 0}")
    return
   return
   Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...': 4, 'startpos': 0}")
    Index.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...': 4, 'startpos': 0}")
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...': 4, 'startpos': 0}")
     return [1, 3, 2, 6, 9, 5, 4, 7, 8, 9]
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...': 4, 'startpos': 0}")
     return 1
    return 3
    Name.assign("3, {'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...': 4, 'startpos': 0}")
    return
   return
   If.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...': 4, 'startpos': 0}")
    Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...': 4, 'startpos': 0}")
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...': 4, 'startpos': 0}")
     return 3
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...': 4, 'startpos': 0}")
     return 0
    return False
   return
   Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...': 4, 'startpos': 0}")
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...': 4, 'startpos': 0}")
    return 3
    Index.assign("3, {'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...': 4, 'startpos': 0}")
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...': 4, 'startpos': 0}")
     return [1, 3, 2, 6, 9, 5, 4, 7, 8, 9]
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...': 4, 'startpos': 0}")
     return 4
    return
   return
   Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...': 4, 'startpos': 0}")
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...': 4, 'startpos': 0}")
    return 1
    Name.assign("1, {'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...': 4, 'startpos': 0}")
    return
   return
   Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...': 1, 'startpos': 0}")
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...': 1, 'startpos': 0}")
    return 1
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...': 1, 'startpos': 0}")
    return 0
   return True
   Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...': 1, 'startpos': 0}")
    Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...': 1, 'startpos': 0}")
     Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...': 1, 'startpos': 0}")
      Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...': 1, 'startpos': 0}")
      return 1
      Literal.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...': 1, 'startpos': 0}")
      return 1
     return 0
     Literal.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...': 1, 'startpos': 0}")
     return 1
    return 0
    Name.assign("0, {'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...': 1, 'startpos': 0}")
    return
   return
   Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...': 1, 'startpos': 0}")
    Index.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...': 1, 'startpos': 0}")
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...': 1, 'startpos': 0}")
     return [1, 3, 2, 6, 3, 5, 4, 7, 8, 9]
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...': 1, 'startpos': 0}")
     return 0
    return 1
    Name.assign("1, {'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...': 1, 'startpos': 0}")
    return
   return
   If.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...': 1, 'startpos': 0}")
    Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...': 1, 'startpos': 0}")
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...': 1, 'startpos': 0}")
     return 1
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...': 1, 'startpos': 0}")
     return 0
    return False
   return
   Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...': 1, 'startpos': 0}")
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...': 1, 'startpos': 0}")
    return 1
    Index.assign("1, {'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...': 1, 'startpos': 0}")
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...': 1, 'startpos': 0}")
     return [1, 3, 2, 6, 3, 5, 4, 7, 8, 9]
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...': 1, 'startpos': 0}")
     return 1
    return
   return
   Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 1, 2, 6...': 1, 'startpos': 0}")
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 1, 2, 6...': 1, 'startpos': 0}")
    return 0
    Name.assign("0, {'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 1, 2, 6...': 1, 'startpos': 0}")
    return
   return
   Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 1, 2, 6...': 0, 'startpos': 0}")
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 1, 2, 6...': 0, 'startpos': 0}")
    return 0
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 1, 2, 6...': 0, 'startpos': 0}")
    return 0
   return False
  return
  Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 1, 2, 6...': 0, 'startpos': 0}")
   Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 1, 2, 6...': 0, 'startpos': 0}")
   return 0
   Index.assign("0, {'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 1, 2, 6...': 0, 'startpos': 0}")
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 1, 2, 6...': 0, 'startpos': 0}")
    return [1, 1, 2, 6, 3, 5, 4, 7, 8, 9]
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 1, 2, 6...': 0, 'startpos': 0}")
    return 0
   return
  return
 return
 Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [0, 1, 2, 6, 3, 5, 4, 7, 8, 9]}")
  Call.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [0, 1, 2, 6, 3, 5, 4, 7, 8, 9]}")
   Attribute.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [0, 1, 2, 6, 3, 5, 4, 7, 8, 9]}")
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [0, 1, 2, 6, 3, 5, 4, 7, 8, 9]}")
    return [0, 1, 2, 6, 3, 5, 4, 7, 8, 9]
   return <built-in method pop of list object at 0>
  return 9
  Name.assign("9, {'_siftdown': <Funct...nction object at 0>}, {'heap': [0, 1, 2, 6, 3, 5, 4, 7, 8]}")
  return
 return
 If.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [0, 1, 2, 6...7, 8], 'lastelt': 9}")
  Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [0, 1, 2, 6...7, 8], 'lastelt': 9}")
  return [0, 1, 2, 6, 3, 5, 4, 7, 8]
  Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [0, 1, 2, 6...7, 8], 'lastelt': 9}")
   Index.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [0, 1, 2, 6...7, 8], 'lastelt': 9}")
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [0, 1, 2, 6...7, 8], 'lastelt': 9}")
    return [0, 1, 2, 6, 3, 5, 4, 7, 8]
    Literal.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [0, 1, 2, 6...7, 8], 'lastelt': 9}")
    return 0
   return 0
   Name.assign("0, {'_siftdown': <Funct...nction object at 0>}, {'heap': [0, 1, 2, 6...7, 8], 'lastelt': 9}")
   return
  return
  Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [0, 1, 2, 6... 9, 'returnitem': 0}")
   Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [0, 1, 2, 6... 9, 'returnitem': 0}")
   return 9
   Index.assign("9, {'_siftdown': <Funct...nction object at 0>}, {'heap': [0, 1, 2, 6... 9, 'returnitem': 0}")
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [0, 1, 2, 6... 9, 'returnitem': 0}")
    return [0, 1, 2, 6, 3, 5, 4, 7, 8]
    Literal.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [0, 1, 2, 6... 9, 'returnitem': 0}")
    return 0
   return
  return
  Call.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [9, 1, 2, 6... 9, 'returnitem': 0}")
   Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [9, 1, 2, 6... 9, 'returnitem': 0}")
   return <Function object at 0>
   Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [9, 1, 2, 6... 9, 'returnitem': 0}")
   return [9, 1, 2, 6, 3, 5, 4, 7, 8]
   Literal.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [9, 1, 2, 6... 9, 'returnitem': 0}")
   return 0
   Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [9, 1, 2, 6... 4, 7, 8], 'pos': 0}")
    Call.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [9, 1, 2, 6... 4, 7, 8], 'pos': 0}")
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [9, 1, 2, 6... 4, 7, 8], 'pos': 0}")
     return <built-in function len>
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [9, 1, 2, 6... 4, 7, 8], 'pos': 0}")
     return [9, 1, 2, 6, 3, 5, 4, 7, 8]
    return 9
    Name.assign("9, {'_siftdown': <Funct...nction object at 0>}, {'heap': [9, 1, 2, 6... 4, 7, 8], 'pos': 0}")
    return
   return
   Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'endpos': 9, 'heap'... 4, 7, 8], 'pos': 0}")
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'endpos': 9, 'heap'... 4, 7, 8], 'pos': 0}")
    return 0
    Name.assign("0, {'_siftdown': <Funct...nction object at 0>}, {'endpos': 9, 'heap'... 4, 7, 8], 'pos': 0}")
    return
   return
   Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'endpos': 9, 'heap'...': 0, 'startpos': 0}")
    Index.eval("{'_siftdown': <Funct...nction object at 0>}, {'endpos': 9, 'heap'...': 0, 'startpos': 0}")
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'endpos': 9, 'heap'...': 0, 'startpos': 0}")
     return [9, 1, 2, 6, 3, 5, 4, 7, 8]
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'endpos': 9, 'heap'...': 0, 'startpos': 0}")
     return 0
    return 9
    Name.assign("9, {'_siftdown': <Funct...nction object at 0>}, {'endpos': 9, 'heap'...': 0, 'startpos': 0}")
    return
   return
   Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'endpos': 9, 'heap'...': 0, 'startpos': 0}")
    Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'endpos': 9, 'heap'...': 0, 'startpos': 0}")
     Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'endpos': 9, 'heap'...': 0, 'startpos': 0}")
      Literal.eval("{'_siftdown': <Funct...nction object at 0>}, {'endpos': 9, 'heap'...': 0, 'startpos': 0}")
      return 2
      Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'endpos': 9, 'heap'...': 0, 'startpos': 0}")
      return 0
     return 0
     Literal.eval("{'_siftdown': <Funct...nction object at 0>}, {'endpos': 9, 'heap'...': 0, 'startpos': 0}")
     return 1
    return 1
    Name.assign("1, {'_siftdown': <Funct...nction object at 0>}, {'endpos': 9, 'heap'...': 0, 'startpos': 0}")
    return
   return
   While.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 0, 'startpos': 0}")
    Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 0, 'startpos': 0}")
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 0, 'startpos': 0}")
     return 1
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 0, 'startpos': 0}")
     return 9
    return True
    Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 0, 'startpos': 0}")
     Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 0, 'startpos': 0}")
      Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 0, 'startpos': 0}")
      return 1
      Literal.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 0, 'startpos': 0}")
      return 1
     return 2
     Name.assign("2, {'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 0, 'startpos': 0}")
     return
    return
    If.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
     Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
      Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
      return 2
      Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
      return 9
     return True
     If.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
      Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
       Index.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
        Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
        return [9, 1, 2, 6, 3, 5, 4, 7, 8]
        Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
        return 2
       return 2
       Index.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
        Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
        return [9, 1, 2, 6, 3, 5, 4, 7, 8]
        Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
        return 1
       return 1
      return False
     return
    return
    Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
     Index.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
      Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
      return [9, 1, 2, 6, 3, 5, 4, 7, 8]
      Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
      return 1
     return 1
     Index.assign("1, {'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
      Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
      return [9, 1, 2, 6, 3, 5, 4, 7, 8]
      Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
      return 0
     return
    return
    Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
     return 1
     Name.assign("1, {'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
     return
    return
    Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
     Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
      Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
       Literal.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
       return 2
       Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
       return 1
      return 2
      Literal.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
      return 1
     return 3
     Name.assign("3, {'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
     return
    return
    Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 3, 'end...': 2, 'startpos': 0}")
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 3, 'end...': 2, 'startpos': 0}")
     return 3
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 3, 'end...': 2, 'startpos': 0}")
     return 9
    return True
    Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 3, 'end...': 2, 'startpos': 0}")
     Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 3, 'end...': 2, 'startpos': 0}")
      Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 3, 'end...': 2, 'startpos': 0}")
      return 3
      Literal.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 3, 'end...': 2, 'startpos': 0}")
      return 1
     return 4
     Name.assign("4, {'_siftdown': <Funct...nction object at 0>}, {'childpos': 3, 'end...': 2, 'startpos': 0}")
     return
    return
    If.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 3, 'end...': 4, 'startpos': 0}")
     Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 3, 'end...': 4, 'startpos': 0}")
      Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 3, 'end...': 4, 'startpos': 0}")
      return 4
      Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 3, 'end...': 4, 'startpos': 0}")
      return 9
     return True
     If.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 3, 'end...': 4, 'startpos': 0}")
      Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 3, 'end...': 4, 'startpos': 0}")
       Index.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 3, 'end...': 4, 'startpos': 0}")
        Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 3, 'end...': 4, 'startpos': 0}")
        return [1, 1, 2, 6, 3, 5, 4, 7, 8]
        Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 3, 'end...': 4, 'startpos': 0}")
        return 4
       return 3
       Index.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 3, 'end...': 4, 'startpos': 0}")
        Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 3, 'end...': 4, 'startpos': 0}")
        return [1, 1, 2, 6, 3, 5, 4, 7, 8]
        Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 3, 'end...': 4, 'startpos': 0}")
        return 3
       return 6
      return True
      Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 3, 'end...': 4, 'startpos': 0}")
       Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 3, 'end...': 4, 'startpos': 0}")
       return 4
       Name.assign("4, {'_siftdown': <Funct...nction object at 0>}, {'childpos': 3, 'end...': 4, 'startpos': 0}")
       return
      return
     return
    return
    Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 4, 'end...': 4, 'startpos': 0}")
     Index.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 4, 'end...': 4, 'startpos': 0}")
      Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 4, 'end...': 4, 'startpos': 0}")
      return [1, 1, 2, 6, 3, 5, 4, 7, 8]
      Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 4, 'end...': 4, 'startpos': 0}")
      return 4
     return 3
     Index.assign("3, {'_siftdown': <Funct...nction object at 0>}, {'childpos': 4, 'end...': 4, 'startpos': 0}")
      Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 4, 'end...': 4, 'startpos': 0}")
      return [1, 1, 2, 6, 3, 5, 4, 7, 8]
      Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 4, 'end...': 4, 'startpos': 0}")
      return 1
     return
    return
    Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 4, 'end...': 4, 'startpos': 0}")
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 4, 'end...': 4, 'startpos': 0}")
     return 4
     Name.assign("4, {'_siftdown': <Funct...nction object at 0>}, {'childpos': 4, 'end...': 4, 'startpos': 0}")
     return
    return
    Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 4, 'end...': 4, 'startpos': 0}")
     Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 4, 'end...': 4, 'startpos': 0}")
      Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 4, 'end...': 4, 'startpos': 0}")
       Literal.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 4, 'end...': 4, 'startpos': 0}")
       return 2
       Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 4, 'end...': 4, 'startpos': 0}")
       return 4
      return 8
      Literal.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 4, 'end...': 4, 'startpos': 0}")
      return 1
     return 9
     Name.assign("9, {'_siftdown': <Funct...nction object at 0>}, {'childpos': 4, 'end...': 4, 'startpos': 0}")
     return
    return
    Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 9, 'end...': 4, 'startpos': 0}")
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 9, 'end...': 4, 'startpos': 0}")
     return 9
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 9, 'end...': 4, 'startpos': 0}")
     return 9
    return False
   return
   Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 9, 'end...': 4, 'startpos': 0}")
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 9, 'end...': 4, 'startpos': 0}")
    return 9
    Index.assign("9, {'_siftdown': <Funct...nction object at 0>}, {'childpos': 9, 'end...': 4, 'startpos': 0}")
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 9, 'end...': 4, 'startpos': 0}")
     return [1, 3, 2, 6, 3, 5, 4, 7, 8]
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 9, 'end...': 4, 'startpos': 0}")
     return 4
    return
   return
   Call.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 9, 'end...': 4, 'startpos': 0}")
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 9, 'end...': 4, 'startpos': 0}")
    return <Function object at 0>
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 9, 'end...': 4, 'startpos': 0}")
    return [1, 3, 2, 6, 9, 5, 4, 7, 8]
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 9, 'end...': 4, 'startpos': 0}")
    return 0
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 9, 'end...': 4, 'startpos': 0}")
    return 4
    Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...': 4, 'startpos': 0}")
     Index.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...': 4, 'startpos': 0}")
      Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...': 4, 'startpos': 0}")
      return [1, 3, 2, 6, 9, 5, 4, 7, 8]
      Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...': 4, 'startpos': 0}")
      return 4
     return 9
     Name.assign("9, {'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...': 4, 'startpos': 0}")
     return
    return
    While.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...': 4, 'startpos': 0}")
     Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...': 4, 'startpos': 0}")
      Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...': 4, 'startpos': 0}")
      return 4
      Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...': 4, 'startpos': 0}")
      return 0
     return True
     Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...': 4, 'startpos': 0}")
      Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...': 4, 'startpos': 0}")
       Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...': 4, 'startpos': 0}")
        Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...': 4, 'startpos': 0}")
        return 4
        Literal.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...': 4, 'startpos': 0}")
        return 1
       return 3
       Literal.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...': 4, 'startpos': 0}")
       return 1
      return 1
      Name.assign("1, {'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...': 4, 'startpos': 0}")
      return
     return
     Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...': 4, 'startpos': 0}")
      Index.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...': 4, 'startpos': 0}")
       Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...': 4, 'startpos': 0}")
       return [1, 3, 2, 6, 9, 5, 4, 7, 8]
       Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...': 4, 'startpos': 0}")
       return 1
      return 3
      Name.assign("3, {'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...': 4, 'startpos': 0}")
      return
     return
     If.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...': 4, 'startpos': 0}")
      Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...': 4, 'startpos': 0}")
       Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...': 4, 'startpos': 0}")
       return 3
       Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...': 4, 'startpos': 0}")
       return 9
      return True
      Break.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...': 4, 'startpos': 0}")
      raise <DoBreak instance at 0>
     raise <DoBreak instance at 0>
    return
    Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...': 4, 'startpos': 0}")
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...': 4, 'startpos': 0}")
     return 9
     Index.assign("9, {'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...': 4, 'startpos': 0}")
      Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...': 4, 'startpos': 0}")
      return [1, 3, 2, 6, 9, 5, 4, 7, 8]
      Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...': 4, 'startpos': 0}")
      return 4
     return
    return
   return
  return
 return
 Return.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6... 9, 'returnitem': 0}")
  Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6... 9, 'returnitem': 0}")
  return 0
 raise <DoReturn instance at 0>
 Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6, 9, 5, 4, 7, 8]}")
  Call.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6, 9, 5, 4, 7, 8]}")
   Attribute.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6, 9, 5, 4, 7, 8]}")
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6, 9, 5, 4, 7, 8]}")
    return [1, 3, 2, 6, 9, 5, 4, 7, 8]
   return <built-in method pop of list object at 0>
  return 8
  Name.assign("8, {'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6, 9, 5, 4, 7]}")
  return
 return
 If.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...4, 7], 'lastelt': 8}")
  Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...4, 7], 'lastelt': 8}")
  return [1, 3, 2, 6, 9, 5, 4, 7]
  Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...4, 7], 'lastelt': 8}")
   Index.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...4, 7], 'lastelt': 8}")
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...4, 7], 'lastelt': 8}")
    return [1, 3, 2, 6, 9, 5, 4, 7]
    Literal.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...4, 7], 'lastelt': 8}")
    return 0
   return 1
   Name.assign("1, {'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6...4, 7], 'lastelt': 8}")
   return
  return
  Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6... 8, 'returnitem': 1}")
   Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6... 8, 'returnitem': 1}")
   return 8
   Index.assign("8, {'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6... 8, 'returnitem': 1}")
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6... 8, 'returnitem': 1}")
    return [1, 3, 2, 6, 9, 5, 4, 7]
    Literal.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [1, 3, 2, 6... 8, 'returnitem': 1}")
    return 0
   return
  return
  Call.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [8, 3, 2, 6... 8, 'returnitem': 1}")
   Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [8, 3, 2, 6... 8, 'returnitem': 1}")
   return <Function object at 0>
   Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [8, 3, 2, 6... 8, 'returnitem': 1}")
   return [8, 3, 2, 6, 9, 5, 4, 7]
   Literal.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [8, 3, 2, 6... 8, 'returnitem': 1}")
   return 0
   Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [8, 3, 2, 6, 9, 5, 4, 7], 'pos': 0}")
    Call.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [8, 3, 2, 6, 9, 5, 4, 7], 'pos': 0}")
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [8, 3, 2, 6, 9, 5, 4, 7], 'pos': 0}")
     return <built-in function len>
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [8, 3, 2, 6, 9, 5, 4, 7], 'pos': 0}")
     return [8, 3, 2, 6, 9, 5, 4, 7]
    return 8
    Name.assign("8, {'_siftdown': <Funct...nction object at 0>}, {'heap': [8, 3, 2, 6, 9, 5, 4, 7], 'pos': 0}")
    return
   return
   Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'endpos': 8, 'heap'... 5, 4, 7], 'pos': 0}")
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'endpos': 8, 'heap'... 5, 4, 7], 'pos': 0}")
    return 0
    Name.assign("0, {'_siftdown': <Funct...nction object at 0>}, {'endpos': 8, 'heap'... 5, 4, 7], 'pos': 0}")
    return
   return
   Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'endpos': 8, 'heap'...': 0, 'startpos': 0}")
    Index.eval("{'_siftdown': <Funct...nction object at 0>}, {'endpos': 8, 'heap'...': 0, 'startpos': 0}")
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'endpos': 8, 'heap'...': 0, 'startpos': 0}")
     return [8, 3, 2, 6, 9, 5, 4, 7]
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'endpos': 8, 'heap'...': 0, 'startpos': 0}")
     return 0
    return 8
    Name.assign("8, {'_siftdown': <Funct...nction object at 0>}, {'endpos': 8, 'heap'...': 0, 'startpos': 0}")
    return
   return
   Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'endpos': 8, 'heap'...': 0, 'startpos': 0}")
    Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'endpos': 8, 'heap'...': 0, 'startpos': 0}")
     Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'endpos': 8, 'heap'...': 0, 'startpos': 0}")
      Literal.eval("{'_siftdown': <Funct...nction object at 0>}, {'endpos': 8, 'heap'...': 0, 'startpos': 0}")
      return 2
      Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'endpos': 8, 'heap'...': 0, 'startpos': 0}")
      return 0
     return 0
     Literal.eval("{'_siftdown': <Funct...nction object at 0>}, {'endpos': 8, 'heap'...': 0, 'startpos': 0}")
     return 1
    return 1
    Name.assign("1, {'_siftdown': <Funct...nction object at 0>}, {'endpos': 8, 'heap'...': 0, 'startpos': 0}")
    return
   return
   While.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 0, 'startpos': 0}")
    Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 0, 'startpos': 0}")
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 0, 'startpos': 0}")
     return 1
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 0, 'startpos': 0}")
     return 8
    return True
    Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 0, 'startpos': 0}")
     Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 0, 'startpos': 0}")
      Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 0, 'startpos': 0}")
      return 1
      Literal.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 0, 'startpos': 0}")
      return 1
     return 2
     Name.assign("2, {'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 0, 'startpos': 0}")
     return
    return
    If.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
     Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
      Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
      return 2
      Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
      return 8
     return True
     If.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
      Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
       Index.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
        Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
        return [8, 3, 2, 6, 9, 5, 4, 7]
        Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
        return 2
       return 2
       Index.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
        Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
        return [8, 3, 2, 6, 9, 5, 4, 7]
        Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
        return 1
       return 3
      return True
      Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
       Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
       return 2
       Name.assign("2, {'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
       return
      return
     return
    return
    Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 2, 'end...': 2, 'startpos': 0}")
     Index.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 2, 'end...': 2, 'startpos': 0}")
      Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 2, 'end...': 2, 'startpos': 0}")
      return [8, 3, 2, 6, 9, 5, 4, 7]
      Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 2, 'end...': 2, 'startpos': 0}")
      return 2
     return 2
     Index.assign("2, {'_siftdown': <Funct...nction object at 0>}, {'childpos': 2, 'end...': 2, 'startpos': 0}")
      Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 2, 'end...': 2, 'startpos': 0}")
      return [8, 3, 2, 6, 9, 5, 4, 7]
      Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 2, 'end...': 2, 'startpos': 0}")
      return 0
     return
    return
    Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 2, 'end...': 2, 'startpos': 0}")
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 2, 'end...': 2, 'startpos': 0}")
     return 2
     Name.assign("2, {'_siftdown': <Funct...nction object at 0>}, {'childpos': 2, 'end...': 2, 'startpos': 0}")
     return
    return
    Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 2, 'end...': 2, 'startpos': 0}")
     Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 2, 'end...': 2, 'startpos': 0}")
      Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 2, 'end...': 2, 'startpos': 0}")
       Literal.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 2, 'end...': 2, 'startpos': 0}")
       return 2
       Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 2, 'end...': 2, 'startpos': 0}")
       return 2
      return 4
      Literal.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 2, 'end...': 2, 'startpos': 0}")
      return 1
     return 5
     Name.assign("5, {'_siftdown': <Funct...nction object at 0>}, {'childpos': 2, 'end...': 2, 'startpos': 0}")
     return
    return
    Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 5, 'end...': 2, 'startpos': 0}")
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 5, 'end...': 2, 'startpos': 0}")
     return 5
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 5, 'end...': 2, 'startpos': 0}")
     return 8
    return True
    Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 5, 'end...': 2, 'startpos': 0}")
     Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 5, 'end...': 2, 'startpos': 0}")
      Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 5, 'end...': 2, 'startpos': 0}")
      return 5
      Literal.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 5, 'end...': 2, 'startpos': 0}")
      return 1
     return 6
     Name.assign("6, {'_siftdown': <Funct...nction object at 0>}, {'childpos': 5, 'end...': 2, 'startpos': 0}")
     return
    return
    If.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 5, 'end...': 6, 'startpos': 0}")
     Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 5, 'end...': 6, 'startpos': 0}")
      Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 5, 'end...': 6, 'startpos': 0}")
      return 6
      Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 5, 'end...': 6, 'startpos': 0}")
      return 8
     return True
     If.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 5, 'end...': 6, 'startpos': 0}")
      Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 5, 'end...': 6, 'startpos': 0}")
       Index.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 5, 'end...': 6, 'startpos': 0}")
        Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 5, 'end...': 6, 'startpos': 0}")
        return [2, 3, 2, 6, 9, 5, 4, 7]
        Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 5, 'end...': 6, 'startpos': 0}")
        return 6
       return 4
       Index.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 5, 'end...': 6, 'startpos': 0}")
        Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 5, 'end...': 6, 'startpos': 0}")
        return [2, 3, 2, 6, 9, 5, 4, 7]
        Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 5, 'end...': 6, 'startpos': 0}")
        return 5
       return 5
      return True
      Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 5, 'end...': 6, 'startpos': 0}")
       Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 5, 'end...': 6, 'startpos': 0}")
       return 6
       Name.assign("6, {'_siftdown': <Funct...nction object at 0>}, {'childpos': 5, 'end...': 6, 'startpos': 0}")
       return
      return
     return
    return
    Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 6, 'end...': 6, 'startpos': 0}")
     Index.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 6, 'end...': 6, 'startpos': 0}")
      Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 6, 'end...': 6, 'startpos': 0}")
      return [2, 3, 2, 6, 9, 5, 4, 7]
      Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 6, 'end...': 6, 'startpos': 0}")
      return 6
     return 4
     Index.assign("4, {'_siftdown': <Funct...nction object at 0>}, {'childpos': 6, 'end...': 6, 'startpos': 0}")
      Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 6, 'end...': 6, 'startpos': 0}")
      return [2, 3, 2, 6, 9, 5, 4, 7]
      Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 6, 'end...': 6, 'startpos': 0}")
      return 2
     return
    return
    Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 6, 'end...': 6, 'startpos': 0}")
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 6, 'end...': 6, 'startpos': 0}")
     return 6
     Name.assign("6, {'_siftdown': <Funct...nction object at 0>}, {'childpos': 6, 'end...': 6, 'startpos': 0}")
     return
    return
    Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 6, 'end...': 6, 'startpos': 0}")
     Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 6, 'end...': 6, 'startpos': 0}")
      Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 6, 'end...': 6, 'startpos': 0}")
       Literal.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 6, 'end...': 6, 'startpos': 0}")
       return 2
       Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 6, 'end...': 6, 'startpos': 0}")
       return 6
      return 12
      Literal.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 6, 'end...': 6, 'startpos': 0}")
      return 1
     return 13
     Name.assign("13, {'_siftdown': <Funct...nction object at 0>}, {'childpos': 6, 'end...': 6, 'startpos': 0}")
     return
    return
    Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 13, 'en...': 6, 'startpos': 0}")
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 13, 'en...': 6, 'startpos': 0}")
     return 13
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 13, 'en...': 6, 'startpos': 0}")
     return 8
    return False
   return
   Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 13, 'en...': 6, 'startpos': 0}")
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 13, 'en...': 6, 'startpos': 0}")
    return 8
    Index.assign("8, {'_siftdown': <Funct...nction object at 0>}, {'childpos': 13, 'en...': 6, 'startpos': 0}")
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 13, 'en...': 6, 'startpos': 0}")
     return [2, 3, 4, 6, 9, 5, 4, 7]
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 13, 'en...': 6, 'startpos': 0}")
     return 6
    return
   return
   Call.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 13, 'en...': 6, 'startpos': 0}")
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 13, 'en...': 6, 'startpos': 0}")
    return <Function object at 0>
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 13, 'en...': 6, 'startpos': 0}")
    return [2, 3, 4, 6, 9, 5, 8, 7]
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 13, 'en...': 6, 'startpos': 0}")
    return 0
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 13, 'en...': 6, 'startpos': 0}")
    return 6
    Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [2, 3, 4, 6...': 6, 'startpos': 0}")
     Index.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [2, 3, 4, 6...': 6, 'startpos': 0}")
      Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [2, 3, 4, 6...': 6, 'startpos': 0}")
      return [2, 3, 4, 6, 9, 5, 8, 7]
      Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [2, 3, 4, 6...': 6, 'startpos': 0}")
      return 6
     return 8
     Name.assign("8, {'_siftdown': <Funct...nction object at 0>}, {'heap': [2, 3, 4, 6...': 6, 'startpos': 0}")
     return
    return
    While.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [2, 3, 4, 6...': 6, 'startpos': 0}")
     Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [2, 3, 4, 6...': 6, 'startpos': 0}")
      Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [2, 3, 4, 6...': 6, 'startpos': 0}")
      return 6
      Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [2, 3, 4, 6...': 6, 'startpos': 0}")
      return 0
     return True
     Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [2, 3, 4, 6...': 6, 'startpos': 0}")
      Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [2, 3, 4, 6...': 6, 'startpos': 0}")
       Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [2, 3, 4, 6...': 6, 'startpos': 0}")
        Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [2, 3, 4, 6...': 6, 'startpos': 0}")
        return 6
        Literal.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [2, 3, 4, 6...': 6, 'startpos': 0}")
        return 1
       return 5
       Literal.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [2, 3, 4, 6...': 6, 'startpos': 0}")
       return 1
      return 2
      Name.assign("2, {'_siftdown': <Funct...nction object at 0>}, {'heap': [2, 3, 4, 6...': 6, 'startpos': 0}")
      return
     return
     Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [2, 3, 4, 6...': 6, 'startpos': 0}")
      Index.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [2, 3, 4, 6...': 6, 'startpos': 0}")
       Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [2, 3, 4, 6...': 6, 'startpos': 0}")
       return [2, 3, 4, 6, 9, 5, 8, 7]
       Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [2, 3, 4, 6...': 6, 'startpos': 0}")
       return 2
      return 4
      Name.assign("4, {'_siftdown': <Funct...nction object at 0>}, {'heap': [2, 3, 4, 6...': 6, 'startpos': 0}")
      return
     return
     If.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [2, 3, 4, 6...': 6, 'startpos': 0}")
      Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [2, 3, 4, 6...': 6, 'startpos': 0}")
       Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [2, 3, 4, 6...': 6, 'startpos': 0}")
       return 4
       Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [2, 3, 4, 6...': 6, 'startpos': 0}")
       return 8
      return True
      Break.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [2, 3, 4, 6...': 6, 'startpos': 0}")
      raise <DoBreak instance at 0>
     raise <DoBreak instance at 0>
    return
    Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [2, 3, 4, 6...': 6, 'startpos': 0}")
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [2, 3, 4, 6...': 6, 'startpos': 0}")
     return 8
     Index.assign("8, {'_siftdown': <Funct...nction object at 0>}, {'heap': [2, 3, 4, 6...': 6, 'startpos': 0}")
      Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [2, 3, 4, 6...': 6, 'startpos': 0}")
      return [2, 3, 4, 6, 9, 5, 8, 7]
      Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [2, 3, 4, 6...': 6, 'startpos': 0}")
      return 6
     return
    return
   return
  return
 return
 Return.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [2, 3, 4, 6... 8, 'returnitem': 1}")
  Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [2, 3, 4, 6... 8, 'returnitem': 1}")
  return 1
 raise <DoReturn instance at 0>
 Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [2, 3, 4, 6, 9, 5, 8, 7]}")
  Call.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [2, 3, 4, 6, 9, 5, 8, 7]}")
   Attribute.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [2, 3, 4, 6, 9, 5, 8, 7]}")
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [2, 3, 4, 6, 9, 5, 8, 7]}")
    return [2, 3, 4, 6, 9, 5, 8, 7]
   return <built-in method pop of list object at 0>
  return 7
  Name.assign("7, {'_siftdown': <Funct...nction object at 0>}, {'heap': [2, 3, 4, 6, 9, 5, 8]}")
  return
 return
 If.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [2, 3, 4, 6...5, 8], 'lastelt': 7}")
  Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [2, 3, 4, 6...5, 8], 'lastelt': 7}")
  return [2, 3, 4, 6, 9, 5, 8]
  Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [2, 3, 4, 6...5, 8], 'lastelt': 7}")
   Index.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [2, 3, 4, 6...5, 8], 'lastelt': 7}")
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [2, 3, 4, 6...5, 8], 'lastelt': 7}")
    return [2, 3, 4, 6, 9, 5, 8]
    Literal.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [2, 3, 4, 6...5, 8], 'lastelt': 7}")
    return 0
   return 2
   Name.assign("2, {'_siftdown': <Funct...nction object at 0>}, {'heap': [2, 3, 4, 6...5, 8], 'lastelt': 7}")
   return
  return
  Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [2, 3, 4, 6... 7, 'returnitem': 2}")
   Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [2, 3, 4, 6... 7, 'returnitem': 2}")
   return 7
   Index.assign("7, {'_siftdown': <Funct...nction object at 0>}, {'heap': [2, 3, 4, 6... 7, 'returnitem': 2}")
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [2, 3, 4, 6... 7, 'returnitem': 2}")
    return [2, 3, 4, 6, 9, 5, 8]
    Literal.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [2, 3, 4, 6... 7, 'returnitem': 2}")
    return 0
   return
  return
  Call.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [7, 3, 4, 6... 7, 'returnitem': 2}")
   Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [7, 3, 4, 6... 7, 'returnitem': 2}")
   return <Function object at 0>
   Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [7, 3, 4, 6... 7, 'returnitem': 2}")
   return [7, 3, 4, 6, 9, 5, 8]
   Literal.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [7, 3, 4, 6... 7, 'returnitem': 2}")
   return 0
   Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [7, 3, 4, 6, 9, 5, 8], 'pos': 0}")
    Call.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [7, 3, 4, 6, 9, 5, 8], 'pos': 0}")
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [7, 3, 4, 6, 9, 5, 8], 'pos': 0}")
     return <built-in function len>
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [7, 3, 4, 6, 9, 5, 8], 'pos': 0}")
     return [7, 3, 4, 6, 9, 5, 8]
    return 7
    Name.assign("7, {'_siftdown': <Funct...nction object at 0>}, {'heap': [7, 3, 4, 6, 9, 5, 8], 'pos': 0}")
    return
   return
   Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'endpos': 7, 'heap'... 9, 5, 8], 'pos': 0}")
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'endpos': 7, 'heap'... 9, 5, 8], 'pos': 0}")
    return 0
    Name.assign("0, {'_siftdown': <Funct...nction object at 0>}, {'endpos': 7, 'heap'... 9, 5, 8], 'pos': 0}")
    return
   return
   Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'endpos': 7, 'heap'...': 0, 'startpos': 0}")
    Index.eval("{'_siftdown': <Funct...nction object at 0>}, {'endpos': 7, 'heap'...': 0, 'startpos': 0}")
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'endpos': 7, 'heap'...': 0, 'startpos': 0}")
     return [7, 3, 4, 6, 9, 5, 8]
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'endpos': 7, 'heap'...': 0, 'startpos': 0}")
     return 0
    return 7
    Name.assign("7, {'_siftdown': <Funct...nction object at 0>}, {'endpos': 7, 'heap'...': 0, 'startpos': 0}")
    return
   return
   Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'endpos': 7, 'heap'...': 0, 'startpos': 0}")
    Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'endpos': 7, 'heap'...': 0, 'startpos': 0}")
     Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'endpos': 7, 'heap'...': 0, 'startpos': 0}")
      Literal.eval("{'_siftdown': <Funct...nction object at 0>}, {'endpos': 7, 'heap'...': 0, 'startpos': 0}")
      return 2
      Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'endpos': 7, 'heap'...': 0, 'startpos': 0}")
      return 0
     return 0
     Literal.eval("{'_siftdown': <Funct...nction object at 0>}, {'endpos': 7, 'heap'...': 0, 'startpos': 0}")
     return 1
    return 1
    Name.assign("1, {'_siftdown': <Funct...nction object at 0>}, {'endpos': 7, 'heap'...': 0, 'startpos': 0}")
    return
   return
   While.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 0, 'startpos': 0}")
    Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 0, 'startpos': 0}")
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 0, 'startpos': 0}")
     return 1
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 0, 'startpos': 0}")
     return 7
    return True
    Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 0, 'startpos': 0}")
     Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 0, 'startpos': 0}")
      Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 0, 'startpos': 0}")
      return 1
      Literal.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 0, 'startpos': 0}")
      return 1
     return 2
     Name.assign("2, {'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 0, 'startpos': 0}")
     return
    return
    If.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
     Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
      Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
      return 2
      Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
      return 7
     return True
     If.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
      Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
       Index.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
        Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
        return [7, 3, 4, 6, 9, 5, 8]
        Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
        return 2
       return 4
       Index.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
        Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
        return [7, 3, 4, 6, 9, 5, 8]
        Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
        return 1
       return 3
      return False
     return
    return
    Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
     Index.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
      Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
      return [7, 3, 4, 6, 9, 5, 8]
      Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
      return 1
     return 3
     Index.assign("3, {'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
      Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
      return [7, 3, 4, 6, 9, 5, 8]
      Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
      return 0
     return
    return
    Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
     return 1
     Name.assign("1, {'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
     return
    return
    Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
     Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
      Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
       Literal.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
       return 2
       Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
       return 1
      return 2
      Literal.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
      return 1
     return 3
     Name.assign("3, {'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
     return
    return
    Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 3, 'end...': 2, 'startpos': 0}")
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 3, 'end...': 2, 'startpos': 0}")
     return 3
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 3, 'end...': 2, 'startpos': 0}")
     return 7
    return True
    Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 3, 'end...': 2, 'startpos': 0}")
     Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 3, 'end...': 2, 'startpos': 0}")
      Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 3, 'end...': 2, 'startpos': 0}")
      return 3
      Literal.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 3, 'end...': 2, 'startpos': 0}")
      return 1
     return 4
     Name.assign("4, {'_siftdown': <Funct...nction object at 0>}, {'childpos': 3, 'end...': 2, 'startpos': 0}")
     return
    return
    If.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 3, 'end...': 4, 'startpos': 0}")
     Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 3, 'end...': 4, 'startpos': 0}")
      Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 3, 'end...': 4, 'startpos': 0}")
      return 4
      Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 3, 'end...': 4, 'startpos': 0}")
      return 7
     return True
     If.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 3, 'end...': 4, 'startpos': 0}")
      Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 3, 'end...': 4, 'startpos': 0}")
       Index.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 3, 'end...': 4, 'startpos': 0}")
        Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 3, 'end...': 4, 'startpos': 0}")
        return [3, 3, 4, 6, 9, 5, 8]
        Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 3, 'end...': 4, 'startpos': 0}")
        return 4
       return 9
       Index.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 3, 'end...': 4, 'startpos': 0}")
        Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 3, 'end...': 4, 'startpos': 0}")
        return [3, 3, 4, 6, 9, 5, 8]
        Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 3, 'end...': 4, 'startpos': 0}")
        return 3
       return 6
      return False
     return
    return
    Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 3, 'end...': 4, 'startpos': 0}")
     Index.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 3, 'end...': 4, 'startpos': 0}")
      Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 3, 'end...': 4, 'startpos': 0}")
      return [3, 3, 4, 6, 9, 5, 8]
      Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 3, 'end...': 4, 'startpos': 0}")
      return 3
     return 6
     Index.assign("6, {'_siftdown': <Funct...nction object at 0>}, {'childpos': 3, 'end...': 4, 'startpos': 0}")
      Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 3, 'end...': 4, 'startpos': 0}")
      return [3, 3, 4, 6, 9, 5, 8]
      Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 3, 'end...': 4, 'startpos': 0}")
      return 1
     return
    return
    Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 3, 'end...': 4, 'startpos': 0}")
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 3, 'end...': 4, 'startpos': 0}")
     return 3
     Name.assign("3, {'_siftdown': <Funct...nction object at 0>}, {'childpos': 3, 'end...': 4, 'startpos': 0}")
     return
    return
    Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 3, 'end...': 4, 'startpos': 0}")
     Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 3, 'end...': 4, 'startpos': 0}")
      Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 3, 'end...': 4, 'startpos': 0}")
       Literal.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 3, 'end...': 4, 'startpos': 0}")
       return 2
       Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 3, 'end...': 4, 'startpos': 0}")
       return 3
      return 6
      Literal.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 3, 'end...': 4, 'startpos': 0}")
      return 1
     return 7
     Name.assign("7, {'_siftdown': <Funct...nction object at 0>}, {'childpos': 3, 'end...': 4, 'startpos': 0}")
     return
    return
    Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 7, 'end...': 4, 'startpos': 0}")
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 7, 'end...': 4, 'startpos': 0}")
     return 7
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 7, 'end...': 4, 'startpos': 0}")
     return 7
    return False
   return
   Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 7, 'end...': 4, 'startpos': 0}")
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 7, 'end...': 4, 'startpos': 0}")
    return 7
    Index.assign("7, {'_siftdown': <Funct...nction object at 0>}, {'childpos': 7, 'end...': 4, 'startpos': 0}")
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 7, 'end...': 4, 'startpos': 0}")
     return [3, 6, 4, 6, 9, 5, 8]
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 7, 'end...': 4, 'startpos': 0}")
     return 3
    return
   return
   Call.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 7, 'end...': 4, 'startpos': 0}")
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 7, 'end...': 4, 'startpos': 0}")
    return <Function object at 0>
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 7, 'end...': 4, 'startpos': 0}")
    return [3, 6, 4, 7, 9, 5, 8]
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 7, 'end...': 4, 'startpos': 0}")
    return 0
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 7, 'end...': 4, 'startpos': 0}")
    return 3
    Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [3, 6, 4, 7...': 3, 'startpos': 0}")
     Index.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [3, 6, 4, 7...': 3, 'startpos': 0}")
      Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [3, 6, 4, 7...': 3, 'startpos': 0}")
      return [3, 6, 4, 7, 9, 5, 8]
      Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [3, 6, 4, 7...': 3, 'startpos': 0}")
      return 3
     return 7
     Name.assign("7, {'_siftdown': <Funct...nction object at 0>}, {'heap': [3, 6, 4, 7...': 3, 'startpos': 0}")
     return
    return
    While.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [3, 6, 4, 7...': 3, 'startpos': 0}")
     Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [3, 6, 4, 7...': 3, 'startpos': 0}")
      Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [3, 6, 4, 7...': 3, 'startpos': 0}")
      return 3
      Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [3, 6, 4, 7...': 3, 'startpos': 0}")
      return 0
     return True
     Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [3, 6, 4, 7...': 3, 'startpos': 0}")
      Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [3, 6, 4, 7...': 3, 'startpos': 0}")
       Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [3, 6, 4, 7...': 3, 'startpos': 0}")
        Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [3, 6, 4, 7...': 3, 'startpos': 0}")
        return 3
        Literal.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [3, 6, 4, 7...': 3, 'startpos': 0}")
        return 1
       return 2
       Literal.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [3, 6, 4, 7...': 3, 'startpos': 0}")
       return 1
      return 1
      Name.assign("1, {'_siftdown': <Funct...nction object at 0>}, {'heap': [3, 6, 4, 7...': 3, 'startpos': 0}")
      return
     return
     Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [3, 6, 4, 7...': 3, 'startpos': 0}")
      Index.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [3, 6, 4, 7...': 3, 'startpos': 0}")
       Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [3, 6, 4, 7...': 3, 'startpos': 0}")
       return [3, 6, 4, 7, 9, 5, 8]
       Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [3, 6, 4, 7...': 3, 'startpos': 0}")
       return 1
      return 6
      Name.assign("6, {'_siftdown': <Funct...nction object at 0>}, {'heap': [3, 6, 4, 7...': 3, 'startpos': 0}")
      return
     return
     If.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [3, 6, 4, 7...': 3, 'startpos': 0}")
      Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [3, 6, 4, 7...': 3, 'startpos': 0}")
       Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [3, 6, 4, 7...': 3, 'startpos': 0}")
       return 6
       Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [3, 6, 4, 7...': 3, 'startpos': 0}")
       return 7
      return True
      Break.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [3, 6, 4, 7...': 3, 'startpos': 0}")
      raise <DoBreak instance at 0>
     raise <DoBreak instance at 0>
    return
    Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [3, 6, 4, 7...': 3, 'startpos': 0}")
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [3, 6, 4, 7...': 3, 'startpos': 0}")
     return 7
     Index.assign("7, {'_siftdown': <Funct...nction object at 0>}, {'heap': [3, 6, 4, 7...': 3, 'startpos': 0}")
      Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [3, 6, 4, 7...': 3, 'startpos': 0}")
      return [3, 6, 4, 7, 9, 5, 8]
      Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [3, 6, 4, 7...': 3, 'startpos': 0}")
      return 3
     return
    return
   return
  return
 return
 Return.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [3, 6, 4, 7... 7, 'returnitem': 2}")
  Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [3, 6, 4, 7... 7, 'returnitem': 2}")
  return 2
 raise <DoReturn instance at 0>
 Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [3, 6, 4, 7, 9, 5, 8]}")
  Call.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [3, 6, 4, 7, 9, 5, 8]}")
   Attribute.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [3, 6, 4, 7, 9, 5, 8]}")
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [3, 6, 4, 7, 9, 5, 8]}")
    return [3, 6, 4, 7, 9, 5, 8]
   return <built-in method pop of list object at 0>
  return 8
  Name.assign("8, {'_siftdown': <Funct...nction object at 0>}, {'heap': [3, 6, 4, 7, 9, 5]}")
  return
 return
 If.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [3, 6, 4, 7, 9, 5], 'lastelt': 8}")
  Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [3, 6, 4, 7, 9, 5], 'lastelt': 8}")
  return [3, 6, 4, 7, 9, 5]
  Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [3, 6, 4, 7, 9, 5], 'lastelt': 8}")
   Index.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [3, 6, 4, 7, 9, 5], 'lastelt': 8}")
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [3, 6, 4, 7, 9, 5], 'lastelt': 8}")
    return [3, 6, 4, 7, 9, 5]
    Literal.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [3, 6, 4, 7, 9, 5], 'lastelt': 8}")
    return 0
   return 3
   Name.assign("3, {'_siftdown': <Funct...nction object at 0>}, {'heap': [3, 6, 4, 7, 9, 5], 'lastelt': 8}")
   return
  return
  Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [3, 6, 4, 7... 8, 'returnitem': 3}")
   Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [3, 6, 4, 7... 8, 'returnitem': 3}")
   return 8
   Index.assign("8, {'_siftdown': <Funct...nction object at 0>}, {'heap': [3, 6, 4, 7... 8, 'returnitem': 3}")
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [3, 6, 4, 7... 8, 'returnitem': 3}")
    return [3, 6, 4, 7, 9, 5]
    Literal.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [3, 6, 4, 7... 8, 'returnitem': 3}")
    return 0
   return
  return
  Call.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [8, 6, 4, 7... 8, 'returnitem': 3}")
   Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [8, 6, 4, 7... 8, 'returnitem': 3}")
   return <Function object at 0>
   Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [8, 6, 4, 7... 8, 'returnitem': 3}")
   return [8, 6, 4, 7, 9, 5]
   Literal.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [8, 6, 4, 7... 8, 'returnitem': 3}")
   return 0
   Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [8, 6, 4, 7, 9, 5], 'pos': 0}")
    Call.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [8, 6, 4, 7, 9, 5], 'pos': 0}")
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [8, 6, 4, 7, 9, 5], 'pos': 0}")
     return <built-in function len>
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [8, 6, 4, 7, 9, 5], 'pos': 0}")
     return [8, 6, 4, 7, 9, 5]
    return 6
    Name.assign("6, {'_siftdown': <Funct...nction object at 0>}, {'heap': [8, 6, 4, 7, 9, 5], 'pos': 0}")
    return
   return
   Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'endpos': 6, 'heap'... 7, 9, 5], 'pos': 0}")
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'endpos': 6, 'heap'... 7, 9, 5], 'pos': 0}")
    return 0
    Name.assign("0, {'_siftdown': <Funct...nction object at 0>}, {'endpos': 6, 'heap'... 7, 9, 5], 'pos': 0}")
    return
   return
   Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'endpos': 6, 'heap'...': 0, 'startpos': 0}")
    Index.eval("{'_siftdown': <Funct...nction object at 0>}, {'endpos': 6, 'heap'...': 0, 'startpos': 0}")
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'endpos': 6, 'heap'...': 0, 'startpos': 0}")
     return [8, 6, 4, 7, 9, 5]
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'endpos': 6, 'heap'...': 0, 'startpos': 0}")
     return 0
    return 8
    Name.assign("8, {'_siftdown': <Funct...nction object at 0>}, {'endpos': 6, 'heap'...': 0, 'startpos': 0}")
    return
   return
   Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'endpos': 6, 'heap'...': 0, 'startpos': 0}")
    Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'endpos': 6, 'heap'...': 0, 'startpos': 0}")
     Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'endpos': 6, 'heap'...': 0, 'startpos': 0}")
      Literal.eval("{'_siftdown': <Funct...nction object at 0>}, {'endpos': 6, 'heap'...': 0, 'startpos': 0}")
      return 2
      Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'endpos': 6, 'heap'...': 0, 'startpos': 0}")
      return 0
     return 0
     Literal.eval("{'_siftdown': <Funct...nction object at 0>}, {'endpos': 6, 'heap'...': 0, 'startpos': 0}")
     return 1
    return 1
    Name.assign("1, {'_siftdown': <Funct...nction object at 0>}, {'endpos': 6, 'heap'...': 0, 'startpos': 0}")
    return
   return
   While.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 0, 'startpos': 0}")
    Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 0, 'startpos': 0}")
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 0, 'startpos': 0}")
     return 1
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 0, 'startpos': 0}")
     return 6
    return True
    Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 0, 'startpos': 0}")
     Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 0, 'startpos': 0}")
      Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 0, 'startpos': 0}")
      return 1
      Literal.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 0, 'startpos': 0}")
      return 1
     return 2
     Name.assign("2, {'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 0, 'startpos': 0}")
     return
    return
    If.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
     Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
      Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
      return 2
      Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
      return 6
     return True
     If.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
      Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
       Index.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
        Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
        return [8, 6, 4, 7, 9, 5]
        Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
        return 2
       return 4
       Index.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
        Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
        return [8, 6, 4, 7, 9, 5]
        Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
        return 1
       return 6
      return True
      Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
       Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
       return 2
       Name.assign("2, {'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
       return
      return
     return
    return
    Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 2, 'end...': 2, 'startpos': 0}")
     Index.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 2, 'end...': 2, 'startpos': 0}")
      Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 2, 'end...': 2, 'startpos': 0}")
      return [8, 6, 4, 7, 9, 5]
      Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 2, 'end...': 2, 'startpos': 0}")
      return 2
     return 4
     Index.assign("4, {'_siftdown': <Funct...nction object at 0>}, {'childpos': 2, 'end...': 2, 'startpos': 0}")
      Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 2, 'end...': 2, 'startpos': 0}")
      return [8, 6, 4, 7, 9, 5]
      Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 2, 'end...': 2, 'startpos': 0}")
      return 0
     return
    return
    Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 2, 'end...': 2, 'startpos': 0}")
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 2, 'end...': 2, 'startpos': 0}")
     return 2
     Name.assign("2, {'_siftdown': <Funct...nction object at 0>}, {'childpos': 2, 'end...': 2, 'startpos': 0}")
     return
    return
    Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 2, 'end...': 2, 'startpos': 0}")
     Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 2, 'end...': 2, 'startpos': 0}")
      Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 2, 'end...': 2, 'startpos': 0}")
       Literal.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 2, 'end...': 2, 'startpos': 0}")
       return 2
       Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 2, 'end...': 2, 'startpos': 0}")
       return 2
      return 4
      Literal.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 2, 'end...': 2, 'startpos': 0}")
      return 1
     return 5
     Name.assign("5, {'_siftdown': <Funct...nction object at 0>}, {'childpos': 2, 'end...': 2, 'startpos': 0}")
     return
    return
    Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 5, 'end...': 2, 'startpos': 0}")
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 5, 'end...': 2, 'startpos': 0}")
     return 5
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 5, 'end...': 2, 'startpos': 0}")
     return 6
    return True
    Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 5, 'end...': 2, 'startpos': 0}")
     Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 5, 'end...': 2, 'startpos': 0}")
      Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 5, 'end...': 2, 'startpos': 0}")
      return 5
      Literal.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 5, 'end...': 2, 'startpos': 0}")
      return 1
     return 6
     Name.assign("6, {'_siftdown': <Funct...nction object at 0>}, {'childpos': 5, 'end...': 2, 'startpos': 0}")
     return
    return
    If.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 5, 'end...': 6, 'startpos': 0}")
     Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 5, 'end...': 6, 'startpos': 0}")
      Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 5, 'end...': 6, 'startpos': 0}")
      return 6
      Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 5, 'end...': 6, 'startpos': 0}")
      return 6
     return False
    return
    Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 5, 'end...': 6, 'startpos': 0}")
     Index.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 5, 'end...': 6, 'startpos': 0}")
      Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 5, 'end...': 6, 'startpos': 0}")
      return [4, 6, 4, 7, 9, 5]
      Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 5, 'end...': 6, 'startpos': 0}")
      return 5
     return 5
     Index.assign("5, {'_siftdown': <Funct...nction object at 0>}, {'childpos': 5, 'end...': 6, 'startpos': 0}")
      Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 5, 'end...': 6, 'startpos': 0}")
      return [4, 6, 4, 7, 9, 5]
      Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 5, 'end...': 6, 'startpos': 0}")
      return 2
     return
    return
    Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 5, 'end...': 6, 'startpos': 0}")
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 5, 'end...': 6, 'startpos': 0}")
     return 5
     Name.assign("5, {'_siftdown': <Funct...nction object at 0>}, {'childpos': 5, 'end...': 6, 'startpos': 0}")
     return
    return
    Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 5, 'end...': 6, 'startpos': 0}")
     Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 5, 'end...': 6, 'startpos': 0}")
      Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 5, 'end...': 6, 'startpos': 0}")
       Literal.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 5, 'end...': 6, 'startpos': 0}")
       return 2
       Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 5, 'end...': 6, 'startpos': 0}")
       return 5
      return 10
      Literal.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 5, 'end...': 6, 'startpos': 0}")
      return 1
     return 11
     Name.assign("11, {'_siftdown': <Funct...nction object at 0>}, {'childpos': 5, 'end...': 6, 'startpos': 0}")
     return
    return
    Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 11, 'en...': 6, 'startpos': 0}")
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 11, 'en...': 6, 'startpos': 0}")
     return 11
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 11, 'en...': 6, 'startpos': 0}")
     return 6
    return False
   return
   Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 11, 'en...': 6, 'startpos': 0}")
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 11, 'en...': 6, 'startpos': 0}")
    return 8
    Index.assign("8, {'_siftdown': <Funct...nction object at 0>}, {'childpos': 11, 'en...': 6, 'startpos': 0}")
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 11, 'en...': 6, 'startpos': 0}")
     return [4, 6, 5, 7, 9, 5]
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 11, 'en...': 6, 'startpos': 0}")
     return 5
    return
   return
   Call.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 11, 'en...': 6, 'startpos': 0}")
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 11, 'en...': 6, 'startpos': 0}")
    return <Function object at 0>
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 11, 'en...': 6, 'startpos': 0}")
    return [4, 6, 5, 7, 9, 8]
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 11, 'en...': 6, 'startpos': 0}")
    return 0
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 11, 'en...': 6, 'startpos': 0}")
    return 5
    Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [4, 6, 5, 7...': 5, 'startpos': 0}")
     Index.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [4, 6, 5, 7...': 5, 'startpos': 0}")
      Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [4, 6, 5, 7...': 5, 'startpos': 0}")
      return [4, 6, 5, 7, 9, 8]
      Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [4, 6, 5, 7...': 5, 'startpos': 0}")
      return 5
     return 8
     Name.assign("8, {'_siftdown': <Funct...nction object at 0>}, {'heap': [4, 6, 5, 7...': 5, 'startpos': 0}")
     return
    return
    While.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [4, 6, 5, 7...': 5, 'startpos': 0}")
     Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [4, 6, 5, 7...': 5, 'startpos': 0}")
      Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [4, 6, 5, 7...': 5, 'startpos': 0}")
      return 5
      Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [4, 6, 5, 7...': 5, 'startpos': 0}")
      return 0
     return True
     Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [4, 6, 5, 7...': 5, 'startpos': 0}")
      Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [4, 6, 5, 7...': 5, 'startpos': 0}")
       Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [4, 6, 5, 7...': 5, 'startpos': 0}")
        Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [4, 6, 5, 7...': 5, 'startpos': 0}")
        return 5
        Literal.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [4, 6, 5, 7...': 5, 'startpos': 0}")
        return 1
       return 4
       Literal.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [4, 6, 5, 7...': 5, 'startpos': 0}")
       return 1
      return 2
      Name.assign("2, {'_siftdown': <Funct...nction object at 0>}, {'heap': [4, 6, 5, 7...': 5, 'startpos': 0}")
      return
     return
     Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [4, 6, 5, 7...': 5, 'startpos': 0}")
      Index.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [4, 6, 5, 7...': 5, 'startpos': 0}")
       Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [4, 6, 5, 7...': 5, 'startpos': 0}")
       return [4, 6, 5, 7, 9, 8]
       Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [4, 6, 5, 7...': 5, 'startpos': 0}")
       return 2
      return 5
      Name.assign("5, {'_siftdown': <Funct...nction object at 0>}, {'heap': [4, 6, 5, 7...': 5, 'startpos': 0}")
      return
     return
     If.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [4, 6, 5, 7...': 5, 'startpos': 0}")
      Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [4, 6, 5, 7...': 5, 'startpos': 0}")
       Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [4, 6, 5, 7...': 5, 'startpos': 0}")
       return 5
       Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [4, 6, 5, 7...': 5, 'startpos': 0}")
       return 8
      return True
      Break.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [4, 6, 5, 7...': 5, 'startpos': 0}")
      raise <DoBreak instance at 0>
     raise <DoBreak instance at 0>
    return
    Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [4, 6, 5, 7...': 5, 'startpos': 0}")
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [4, 6, 5, 7...': 5, 'startpos': 0}")
     return 8
     Index.assign("8, {'_siftdown': <Funct...nction object at 0>}, {'heap': [4, 6, 5, 7...': 5, 'startpos': 0}")
      Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [4, 6, 5, 7...': 5, 'startpos': 0}")
      return [4, 6, 5, 7, 9, 8]
      Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [4, 6, 5, 7...': 5, 'startpos': 0}")
      return 5
     return
    return
   return
  return
 return
 Return.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [4, 6, 5, 7... 8, 'returnitem': 3}")
  Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [4, 6, 5, 7... 8, 'returnitem': 3}")
  return 3
 raise <DoReturn instance at 0>
 Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [4, 6, 5, 7, 9, 8]}")
  Call.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [4, 6, 5, 7, 9, 8]}")
   Attribute.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [4, 6, 5, 7, 9, 8]}")
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [4, 6, 5, 7, 9, 8]}")
    return [4, 6, 5, 7, 9, 8]
   return <built-in method pop of list object at 0>
  return 8
  Name.assign("8, {'_siftdown': <Funct...nction object at 0>}, {'heap': [4, 6, 5, 7, 9]}")
  return
 return
 If.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [4, 6, 5, 7, 9], 'lastelt': 8}")
  Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [4, 6, 5, 7, 9], 'lastelt': 8}")
  return [4, 6, 5, 7, 9]
  Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [4, 6, 5, 7, 9], 'lastelt': 8}")
   Index.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [4, 6, 5, 7, 9], 'lastelt': 8}")
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [4, 6, 5, 7, 9], 'lastelt': 8}")
    return [4, 6, 5, 7, 9]
    Literal.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [4, 6, 5, 7, 9], 'lastelt': 8}")
    return 0
   return 4
   Name.assign("4, {'_siftdown': <Funct...nction object at 0>}, {'heap': [4, 6, 5, 7, 9], 'lastelt': 8}")
   return
  return
  Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [4, 6, 5, 7... 8, 'returnitem': 4}")
   Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [4, 6, 5, 7... 8, 'returnitem': 4}")
   return 8
   Index.assign("8, {'_siftdown': <Funct...nction object at 0>}, {'heap': [4, 6, 5, 7... 8, 'returnitem': 4}")
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [4, 6, 5, 7... 8, 'returnitem': 4}")
    return [4, 6, 5, 7, 9]
    Literal.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [4, 6, 5, 7... 8, 'returnitem': 4}")
    return 0
   return
  return
  Call.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [8, 6, 5, 7... 8, 'returnitem': 4}")
   Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [8, 6, 5, 7... 8, 'returnitem': 4}")
   return <Function object at 0>
   Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [8, 6, 5, 7... 8, 'returnitem': 4}")
   return [8, 6, 5, 7, 9]
   Literal.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [8, 6, 5, 7... 8, 'returnitem': 4}")
   return 0
   Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [8, 6, 5, 7, 9], 'pos': 0}")
    Call.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [8, 6, 5, 7, 9], 'pos': 0}")
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [8, 6, 5, 7, 9], 'pos': 0}")
     return <built-in function len>
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [8, 6, 5, 7, 9], 'pos': 0}")
     return [8, 6, 5, 7, 9]
    return 5
    Name.assign("5, {'_siftdown': <Funct...nction object at 0>}, {'heap': [8, 6, 5, 7, 9], 'pos': 0}")
    return
   return
   Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'endpos': 5, 'heap'... 5, 7, 9], 'pos': 0}")
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'endpos': 5, 'heap'... 5, 7, 9], 'pos': 0}")
    return 0
    Name.assign("0, {'_siftdown': <Funct...nction object at 0>}, {'endpos': 5, 'heap'... 5, 7, 9], 'pos': 0}")
    return
   return
   Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'endpos': 5, 'heap'...': 0, 'startpos': 0}")
    Index.eval("{'_siftdown': <Funct...nction object at 0>}, {'endpos': 5, 'heap'...': 0, 'startpos': 0}")
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'endpos': 5, 'heap'...': 0, 'startpos': 0}")
     return [8, 6, 5, 7, 9]
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'endpos': 5, 'heap'...': 0, 'startpos': 0}")
     return 0
    return 8
    Name.assign("8, {'_siftdown': <Funct...nction object at 0>}, {'endpos': 5, 'heap'...': 0, 'startpos': 0}")
    return
   return
   Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'endpos': 5, 'heap'...': 0, 'startpos': 0}")
    Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'endpos': 5, 'heap'...': 0, 'startpos': 0}")
     Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'endpos': 5, 'heap'...': 0, 'startpos': 0}")
      Literal.eval("{'_siftdown': <Funct...nction object at 0>}, {'endpos': 5, 'heap'...': 0, 'startpos': 0}")
      return 2
      Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'endpos': 5, 'heap'...': 0, 'startpos': 0}")
      return 0
     return 0
     Literal.eval("{'_siftdown': <Funct...nction object at 0>}, {'endpos': 5, 'heap'...': 0, 'startpos': 0}")
     return 1
    return 1
    Name.assign("1, {'_siftdown': <Funct...nction object at 0>}, {'endpos': 5, 'heap'...': 0, 'startpos': 0}")
    return
   return
   While.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 0, 'startpos': 0}")
    Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 0, 'startpos': 0}")
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 0, 'startpos': 0}")
     return 1
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 0, 'startpos': 0}")
     return 5
    return True
    Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 0, 'startpos': 0}")
     Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 0, 'startpos': 0}")
      Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 0, 'startpos': 0}")
      return 1
      Literal.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 0, 'startpos': 0}")
      return 1
     return 2
     Name.assign("2, {'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 0, 'startpos': 0}")
     return
    return
    If.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
     Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
      Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
      return 2
      Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
      return 5
     return True
     If.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
      Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
       Index.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
        Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
        return [8, 6, 5, 7, 9]
        Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
        return 2
       return 5
       Index.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
        Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
        return [8, 6, 5, 7, 9]
        Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
        return 1
       return 6
      return True
      Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
       Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
       return 2
       Name.assign("2, {'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
       return
      return
     return
    return
    Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 2, 'end...': 2, 'startpos': 0}")
     Index.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 2, 'end...': 2, 'startpos': 0}")
      Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 2, 'end...': 2, 'startpos': 0}")
      return [8, 6, 5, 7, 9]
      Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 2, 'end...': 2, 'startpos': 0}")
      return 2
     return 5
     Index.assign("5, {'_siftdown': <Funct...nction object at 0>}, {'childpos': 2, 'end...': 2, 'startpos': 0}")
      Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 2, 'end...': 2, 'startpos': 0}")
      return [8, 6, 5, 7, 9]
      Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 2, 'end...': 2, 'startpos': 0}")
      return 0
     return
    return
    Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 2, 'end...': 2, 'startpos': 0}")
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 2, 'end...': 2, 'startpos': 0}")
     return 2
     Name.assign("2, {'_siftdown': <Funct...nction object at 0>}, {'childpos': 2, 'end...': 2, 'startpos': 0}")
     return
    return
    Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 2, 'end...': 2, 'startpos': 0}")
     Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 2, 'end...': 2, 'startpos': 0}")
      Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 2, 'end...': 2, 'startpos': 0}")
       Literal.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 2, 'end...': 2, 'startpos': 0}")
       return 2
       Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 2, 'end...': 2, 'startpos': 0}")
       return 2
      return 4
      Literal.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 2, 'end...': 2, 'startpos': 0}")
      return 1
     return 5
     Name.assign("5, {'_siftdown': <Funct...nction object at 0>}, {'childpos': 2, 'end...': 2, 'startpos': 0}")
     return
    return
    Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 5, 'end...': 2, 'startpos': 0}")
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 5, 'end...': 2, 'startpos': 0}")
     return 5
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 5, 'end...': 2, 'startpos': 0}")
     return 5
    return False
   return
   Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 5, 'end...': 2, 'startpos': 0}")
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 5, 'end...': 2, 'startpos': 0}")
    return 8
    Index.assign("8, {'_siftdown': <Funct...nction object at 0>}, {'childpos': 5, 'end...': 2, 'startpos': 0}")
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 5, 'end...': 2, 'startpos': 0}")
     return [5, 6, 5, 7, 9]
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 5, 'end...': 2, 'startpos': 0}")
     return 2
    return
   return
   Call.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 5, 'end...': 2, 'startpos': 0}")
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 5, 'end...': 2, 'startpos': 0}")
    return <Function object at 0>
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 5, 'end...': 2, 'startpos': 0}")
    return [5, 6, 8, 7, 9]
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 5, 'end...': 2, 'startpos': 0}")
    return 0
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 5, 'end...': 2, 'startpos': 0}")
    return 2
    Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [5, 6, 8, 7...': 2, 'startpos': 0}")
     Index.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [5, 6, 8, 7...': 2, 'startpos': 0}")
      Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [5, 6, 8, 7...': 2, 'startpos': 0}")
      return [5, 6, 8, 7, 9]
      Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [5, 6, 8, 7...': 2, 'startpos': 0}")
      return 2
     return 8
     Name.assign("8, {'_siftdown': <Funct...nction object at 0>}, {'heap': [5, 6, 8, 7...': 2, 'startpos': 0}")
     return
    return
    While.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [5, 6, 8, 7...': 2, 'startpos': 0}")
     Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [5, 6, 8, 7...': 2, 'startpos': 0}")
      Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [5, 6, 8, 7...': 2, 'startpos': 0}")
      return 2
      Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [5, 6, 8, 7...': 2, 'startpos': 0}")
      return 0
     return True
     Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [5, 6, 8, 7...': 2, 'startpos': 0}")
      Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [5, 6, 8, 7...': 2, 'startpos': 0}")
       Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [5, 6, 8, 7...': 2, 'startpos': 0}")
        Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [5, 6, 8, 7...': 2, 'startpos': 0}")
        return 2
        Literal.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [5, 6, 8, 7...': 2, 'startpos': 0}")
        return 1
       return 1
       Literal.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [5, 6, 8, 7...': 2, 'startpos': 0}")
       return 1
      return 0
      Name.assign("0, {'_siftdown': <Funct...nction object at 0>}, {'heap': [5, 6, 8, 7...': 2, 'startpos': 0}")
      return
     return
     Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [5, 6, 8, 7...': 2, 'startpos': 0}")
      Index.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [5, 6, 8, 7...': 2, 'startpos': 0}")
       Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [5, 6, 8, 7...': 2, 'startpos': 0}")
       return [5, 6, 8, 7, 9]
       Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [5, 6, 8, 7...': 2, 'startpos': 0}")
       return 0
      return 5
      Name.assign("5, {'_siftdown': <Funct...nction object at 0>}, {'heap': [5, 6, 8, 7...': 2, 'startpos': 0}")
      return
     return
     If.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [5, 6, 8, 7...': 2, 'startpos': 0}")
      Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [5, 6, 8, 7...': 2, 'startpos': 0}")
       Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [5, 6, 8, 7...': 2, 'startpos': 0}")
       return 5
       Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [5, 6, 8, 7...': 2, 'startpos': 0}")
       return 8
      return True
      Break.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [5, 6, 8, 7...': 2, 'startpos': 0}")
      raise <DoBreak instance at 0>
     raise <DoBreak instance at 0>
    return
    Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [5, 6, 8, 7...': 2, 'startpos': 0}")
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [5, 6, 8, 7...': 2, 'startpos': 0}")
     return 8
     Index.assign("8, {'_siftdown': <Funct...nction object at 0>}, {'heap': [5, 6, 8, 7...': 2, 'startpos': 0}")
      Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [5, 6, 8, 7...': 2, 'startpos': 0}")
      return [5, 6, 8, 7, 9]
      Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [5, 6, 8, 7...': 2, 'startpos': 0}")
      return 2
     return
    return
   return
  return
 return
 Return.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [5, 6, 8, 7... 8, 'returnitem': 4}")
  Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [5, 6, 8, 7... 8, 'returnitem': 4}")
  return 4
 raise <DoReturn instance at 0>
 Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [5, 6, 8, 7, 9]}")
  Call.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [5, 6, 8, 7, 9]}")
   Attribute.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [5, 6, 8, 7, 9]}")
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [5, 6, 8, 7, 9]}")
    return [5, 6, 8, 7, 9]
   return <built-in method pop of list object at 0>
  return 9
  Name.assign("9, {'_siftdown': <Funct...nction object at 0>}, {'heap': [5, 6, 8, 7]}")
  return
 return
 If.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [5, 6, 8, 7], 'lastelt': 9}")
  Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [5, 6, 8, 7], 'lastelt': 9}")
  return [5, 6, 8, 7]
  Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [5, 6, 8, 7], 'lastelt': 9}")
   Index.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [5, 6, 8, 7], 'lastelt': 9}")
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [5, 6, 8, 7], 'lastelt': 9}")
    return [5, 6, 8, 7]
    Literal.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [5, 6, 8, 7], 'lastelt': 9}")
    return 0
   return 5
   Name.assign("5, {'_siftdown': <Funct...nction object at 0>}, {'heap': [5, 6, 8, 7], 'lastelt': 9}")
   return
  return
  Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [5, 6, 8, 7... 9, 'returnitem': 5}")
   Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [5, 6, 8, 7... 9, 'returnitem': 5}")
   return 9
   Index.assign("9, {'_siftdown': <Funct...nction object at 0>}, {'heap': [5, 6, 8, 7... 9, 'returnitem': 5}")
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [5, 6, 8, 7... 9, 'returnitem': 5}")
    return [5, 6, 8, 7]
    Literal.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [5, 6, 8, 7... 9, 'returnitem': 5}")
    return 0
   return
  return
  Call.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [9, 6, 8, 7... 9, 'returnitem': 5}")
   Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [9, 6, 8, 7... 9, 'returnitem': 5}")
   return <Function object at 0>
   Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [9, 6, 8, 7... 9, 'returnitem': 5}")
   return [9, 6, 8, 7]
   Literal.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [9, 6, 8, 7... 9, 'returnitem': 5}")
   return 0
   Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [9, 6, 8, 7], 'pos': 0}")
    Call.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [9, 6, 8, 7], 'pos': 0}")
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [9, 6, 8, 7], 'pos': 0}")
     return <built-in function len>
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [9, 6, 8, 7], 'pos': 0}")
     return [9, 6, 8, 7]
    return 4
    Name.assign("4, {'_siftdown': <Funct...nction object at 0>}, {'heap': [9, 6, 8, 7], 'pos': 0}")
    return
   return
   Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'endpos': 4, 'heap'... 6, 8, 7], 'pos': 0}")
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'endpos': 4, 'heap'... 6, 8, 7], 'pos': 0}")
    return 0
    Name.assign("0, {'_siftdown': <Funct...nction object at 0>}, {'endpos': 4, 'heap'... 6, 8, 7], 'pos': 0}")
    return
   return
   Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'endpos': 4, 'heap'...': 0, 'startpos': 0}")
    Index.eval("{'_siftdown': <Funct...nction object at 0>}, {'endpos': 4, 'heap'...': 0, 'startpos': 0}")
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'endpos': 4, 'heap'...': 0, 'startpos': 0}")
     return [9, 6, 8, 7]
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'endpos': 4, 'heap'...': 0, 'startpos': 0}")
     return 0
    return 9
    Name.assign("9, {'_siftdown': <Funct...nction object at 0>}, {'endpos': 4, 'heap'...': 0, 'startpos': 0}")
    return
   return
   Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'endpos': 4, 'heap'...': 0, 'startpos': 0}")
    Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'endpos': 4, 'heap'...': 0, 'startpos': 0}")
     Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'endpos': 4, 'heap'...': 0, 'startpos': 0}")
      Literal.eval("{'_siftdown': <Funct...nction object at 0>}, {'endpos': 4, 'heap'...': 0, 'startpos': 0}")
      return 2
      Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'endpos': 4, 'heap'...': 0, 'startpos': 0}")
      return 0
     return 0
     Literal.eval("{'_siftdown': <Funct...nction object at 0>}, {'endpos': 4, 'heap'...': 0, 'startpos': 0}")
     return 1
    return 1
    Name.assign("1, {'_siftdown': <Funct...nction object at 0>}, {'endpos': 4, 'heap'...': 0, 'startpos': 0}")
    return
   return
   While.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 0, 'startpos': 0}")
    Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 0, 'startpos': 0}")
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 0, 'startpos': 0}")
     return 1
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 0, 'startpos': 0}")
     return 4
    return True
    Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 0, 'startpos': 0}")
     Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 0, 'startpos': 0}")
      Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 0, 'startpos': 0}")
      return 1
      Literal.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 0, 'startpos': 0}")
      return 1
     return 2
     Name.assign("2, {'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 0, 'startpos': 0}")
     return
    return
    If.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
     Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
      Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
      return 2
      Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
      return 4
     return True
     If.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
      Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
       Index.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
        Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
        return [9, 6, 8, 7]
        Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
        return 2
       return 8
       Index.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
        Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
        return [9, 6, 8, 7]
        Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
        return 1
       return 6
      return False
     return
    return
    Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
     Index.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
      Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
      return [9, 6, 8, 7]
      Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
      return 1
     return 6
     Index.assign("6, {'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
      Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
      return [9, 6, 8, 7]
      Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
      return 0
     return
    return
    Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
     return 1
     Name.assign("1, {'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
     return
    return
    Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
     Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
      Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
       Literal.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
       return 2
       Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
       return 1
      return 2
      Literal.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
      return 1
     return 3
     Name.assign("3, {'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
     return
    return
    Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 3, 'end...': 2, 'startpos': 0}")
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 3, 'end...': 2, 'startpos': 0}")
     return 3
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 3, 'end...': 2, 'startpos': 0}")
     return 4
    return True
    Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 3, 'end...': 2, 'startpos': 0}")
     Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 3, 'end...': 2, 'startpos': 0}")
      Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 3, 'end...': 2, 'startpos': 0}")
      return 3
      Literal.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 3, 'end...': 2, 'startpos': 0}")
      return 1
     return 4
     Name.assign("4, {'_siftdown': <Funct...nction object at 0>}, {'childpos': 3, 'end...': 2, 'startpos': 0}")
     return
    return
    If.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 3, 'end...': 4, 'startpos': 0}")
     Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 3, 'end...': 4, 'startpos': 0}")
      Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 3, 'end...': 4, 'startpos': 0}")
      return 4
      Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 3, 'end...': 4, 'startpos': 0}")
      return 4
     return False
    return
    Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 3, 'end...': 4, 'startpos': 0}")
     Index.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 3, 'end...': 4, 'startpos': 0}")
      Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 3, 'end...': 4, 'startpos': 0}")
      return [6, 6, 8, 7]
      Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 3, 'end...': 4, 'startpos': 0}")
      return 3
     return 7
     Index.assign("7, {'_siftdown': <Funct...nction object at 0>}, {'childpos': 3, 'end...': 4, 'startpos': 0}")
      Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 3, 'end...': 4, 'startpos': 0}")
      return [6, 6, 8, 7]
      Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 3, 'end...': 4, 'startpos': 0}")
      return 1
     return
    return
    Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 3, 'end...': 4, 'startpos': 0}")
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 3, 'end...': 4, 'startpos': 0}")
     return 3
     Name.assign("3, {'_siftdown': <Funct...nction object at 0>}, {'childpos': 3, 'end...': 4, 'startpos': 0}")
     return
    return
    Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 3, 'end...': 4, 'startpos': 0}")
     Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 3, 'end...': 4, 'startpos': 0}")
      Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 3, 'end...': 4, 'startpos': 0}")
       Literal.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 3, 'end...': 4, 'startpos': 0}")
       return 2
       Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 3, 'end...': 4, 'startpos': 0}")
       return 3
      return 6
      Literal.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 3, 'end...': 4, 'startpos': 0}")
      return 1
     return 7
     Name.assign("7, {'_siftdown': <Funct...nction object at 0>}, {'childpos': 3, 'end...': 4, 'startpos': 0}")
     return
    return
    Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 7, 'end...': 4, 'startpos': 0}")
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 7, 'end...': 4, 'startpos': 0}")
     return 7
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 7, 'end...': 4, 'startpos': 0}")
     return 4
    return False
   return
   Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 7, 'end...': 4, 'startpos': 0}")
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 7, 'end...': 4, 'startpos': 0}")
    return 9
    Index.assign("9, {'_siftdown': <Funct...nction object at 0>}, {'childpos': 7, 'end...': 4, 'startpos': 0}")
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 7, 'end...': 4, 'startpos': 0}")
     return [6, 7, 8, 7]
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 7, 'end...': 4, 'startpos': 0}")
     return 3
    return
   return
   Call.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 7, 'end...': 4, 'startpos': 0}")
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 7, 'end...': 4, 'startpos': 0}")
    return <Function object at 0>
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 7, 'end...': 4, 'startpos': 0}")
    return [6, 7, 8, 9]
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 7, 'end...': 4, 'startpos': 0}")
    return 0
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 7, 'end...': 4, 'startpos': 0}")
    return 3
    Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [6, 7, 8, 9...': 3, 'startpos': 0}")
     Index.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [6, 7, 8, 9...': 3, 'startpos': 0}")
      Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [6, 7, 8, 9...': 3, 'startpos': 0}")
      return [6, 7, 8, 9]
      Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [6, 7, 8, 9...': 3, 'startpos': 0}")
      return 3
     return 9
     Name.assign("9, {'_siftdown': <Funct...nction object at 0>}, {'heap': [6, 7, 8, 9...': 3, 'startpos': 0}")
     return
    return
    While.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [6, 7, 8, 9...': 3, 'startpos': 0}")
     Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [6, 7, 8, 9...': 3, 'startpos': 0}")
      Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [6, 7, 8, 9...': 3, 'startpos': 0}")
      return 3
      Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [6, 7, 8, 9...': 3, 'startpos': 0}")
      return 0
     return True
     Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [6, 7, 8, 9...': 3, 'startpos': 0}")
      Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [6, 7, 8, 9...': 3, 'startpos': 0}")
       Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [6, 7, 8, 9...': 3, 'startpos': 0}")
        Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [6, 7, 8, 9...': 3, 'startpos': 0}")
        return 3
        Literal.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [6, 7, 8, 9...': 3, 'startpos': 0}")
        return 1
       return 2
       Literal.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [6, 7, 8, 9...': 3, 'startpos': 0}")
       return 1
      return 1
      Name.assign("1, {'_siftdown': <Funct...nction object at 0>}, {'heap': [6, 7, 8, 9...': 3, 'startpos': 0}")
      return
     return
     Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [6, 7, 8, 9...': 3, 'startpos': 0}")
      Index.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [6, 7, 8, 9...': 3, 'startpos': 0}")
       Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [6, 7, 8, 9...': 3, 'startpos': 0}")
       return [6, 7, 8, 9]
       Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [6, 7, 8, 9...': 3, 'startpos': 0}")
       return 1
      return 7
      Name.assign("7, {'_siftdown': <Funct...nction object at 0>}, {'heap': [6, 7, 8, 9...': 3, 'startpos': 0}")
      return
     return
     If.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [6, 7, 8, 9...': 3, 'startpos': 0}")
      Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [6, 7, 8, 9...': 3, 'startpos': 0}")
       Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [6, 7, 8, 9...': 3, 'startpos': 0}")
       return 7
       Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [6, 7, 8, 9...': 3, 'startpos': 0}")
       return 9
      return True
      Break.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [6, 7, 8, 9...': 3, 'startpos': 0}")
      raise <DoBreak instance at 0>
     raise <DoBreak instance at 0>
    return
    Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [6, 7, 8, 9...': 3, 'startpos': 0}")
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [6, 7, 8, 9...': 3, 'startpos': 0}")
     return 9
     Index.assign("9, {'_siftdown': <Funct...nction object at 0>}, {'heap': [6, 7, 8, 9...': 3, 'startpos': 0}")
      Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [6, 7, 8, 9...': 3, 'startpos': 0}")
      return [6, 7, 8, 9]
      Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [6, 7, 8, 9...': 3, 'startpos': 0}")
      return 3
     return
    return
   return
  return
 return
 Return.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [6, 7, 8, 9... 9, 'returnitem': 5}")
  Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [6, 7, 8, 9... 9, 'returnitem': 5}")
  return 5
 raise <DoReturn instance at 0>
 Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [6, 7, 8, 9]}")
  Call.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [6, 7, 8, 9]}")
   Attribute.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [6, 7, 8, 9]}")
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [6, 7, 8, 9]}")
    return [6, 7, 8, 9]
   return <built-in method pop of list object at 0>
  return 9
  Name.assign("9, {'_siftdown': <Funct...nction object at 0>}, {'heap': [6, 7, 8]}")
  return
 return
 If.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [6, 7, 8], 'lastelt': 9}")
  Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [6, 7, 8], 'lastelt': 9}")
  return [6, 7, 8]
  Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [6, 7, 8], 'lastelt': 9}")
   Index.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [6, 7, 8], 'lastelt': 9}")
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [6, 7, 8], 'lastelt': 9}")
    return [6, 7, 8]
    Literal.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [6, 7, 8], 'lastelt': 9}")
    return 0
   return 6
   Name.assign("6, {'_siftdown': <Funct...nction object at 0>}, {'heap': [6, 7, 8], 'lastelt': 9}")
   return
  return
  Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [6, 7, 8], ... 9, 'returnitem': 6}")
   Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [6, 7, 8], ... 9, 'returnitem': 6}")
   return 9
   Index.assign("9, {'_siftdown': <Funct...nction object at 0>}, {'heap': [6, 7, 8], ... 9, 'returnitem': 6}")
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [6, 7, 8], ... 9, 'returnitem': 6}")
    return [6, 7, 8]
    Literal.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [6, 7, 8], ... 9, 'returnitem': 6}")
    return 0
   return
  return
  Call.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [9, 7, 8], ... 9, 'returnitem': 6}")
   Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [9, 7, 8], ... 9, 'returnitem': 6}")
   return <Function object at 0>
   Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [9, 7, 8], ... 9, 'returnitem': 6}")
   return [9, 7, 8]
   Literal.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [9, 7, 8], ... 9, 'returnitem': 6}")
   return 0
   Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [9, 7, 8], 'pos': 0}")
    Call.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [9, 7, 8], 'pos': 0}")
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [9, 7, 8], 'pos': 0}")
     return <built-in function len>
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [9, 7, 8], 'pos': 0}")
     return [9, 7, 8]
    return 3
    Name.assign("3, {'_siftdown': <Funct...nction object at 0>}, {'heap': [9, 7, 8], 'pos': 0}")
    return
   return
   Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'endpos': 3, 'heap': [9, 7, 8], 'pos': 0}")
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'endpos': 3, 'heap': [9, 7, 8], 'pos': 0}")
    return 0
    Name.assign("0, {'_siftdown': <Funct...nction object at 0>}, {'endpos': 3, 'heap': [9, 7, 8], 'pos': 0}")
    return
   return
   Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'endpos': 3, 'heap'...': 0, 'startpos': 0}")
    Index.eval("{'_siftdown': <Funct...nction object at 0>}, {'endpos': 3, 'heap'...': 0, 'startpos': 0}")
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'endpos': 3, 'heap'...': 0, 'startpos': 0}")
     return [9, 7, 8]
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'endpos': 3, 'heap'...': 0, 'startpos': 0}")
     return 0
    return 9
    Name.assign("9, {'_siftdown': <Funct...nction object at 0>}, {'endpos': 3, 'heap'...': 0, 'startpos': 0}")
    return
   return
   Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'endpos': 3, 'heap'...': 0, 'startpos': 0}")
    Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'endpos': 3, 'heap'...': 0, 'startpos': 0}")
     Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'endpos': 3, 'heap'...': 0, 'startpos': 0}")
      Literal.eval("{'_siftdown': <Funct...nction object at 0>}, {'endpos': 3, 'heap'...': 0, 'startpos': 0}")
      return 2
      Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'endpos': 3, 'heap'...': 0, 'startpos': 0}")
      return 0
     return 0
     Literal.eval("{'_siftdown': <Funct...nction object at 0>}, {'endpos': 3, 'heap'...': 0, 'startpos': 0}")
     return 1
    return 1
    Name.assign("1, {'_siftdown': <Funct...nction object at 0>}, {'endpos': 3, 'heap'...': 0, 'startpos': 0}")
    return
   return
   While.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 0, 'startpos': 0}")
    Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 0, 'startpos': 0}")
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 0, 'startpos': 0}")
     return 1
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 0, 'startpos': 0}")
     return 3
    return True
    Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 0, 'startpos': 0}")
     Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 0, 'startpos': 0}")
      Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 0, 'startpos': 0}")
      return 1
      Literal.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 0, 'startpos': 0}")
      return 1
     return 2
     Name.assign("2, {'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 0, 'startpos': 0}")
     return
    return
    If.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
     Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
      Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
      return 2
      Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
      return 3
     return True
     If.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
      Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
       Index.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
        Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
        return [9, 7, 8]
        Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
        return 2
       return 8
       Index.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
        Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
        return [9, 7, 8]
        Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
        return 1
       return 7
      return False
     return
    return
    Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
     Index.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
      Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
      return [9, 7, 8]
      Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
      return 1
     return 7
     Index.assign("7, {'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
      Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
      return [9, 7, 8]
      Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
      return 0
     return
    return
    Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
     return 1
     Name.assign("1, {'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
     return
    return
    Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
     Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
      Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
       Literal.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
       return 2
       Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
       return 1
      return 2
      Literal.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
      return 1
     return 3
     Name.assign("3, {'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
     return
    return
    Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 3, 'end...': 2, 'startpos': 0}")
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 3, 'end...': 2, 'startpos': 0}")
     return 3
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 3, 'end...': 2, 'startpos': 0}")
     return 3
    return False
   return
   Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 3, 'end...': 2, 'startpos': 0}")
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 3, 'end...': 2, 'startpos': 0}")
    return 9
    Index.assign("9, {'_siftdown': <Funct...nction object at 0>}, {'childpos': 3, 'end...': 2, 'startpos': 0}")
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 3, 'end...': 2, 'startpos': 0}")
     return [7, 7, 8]
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 3, 'end...': 2, 'startpos': 0}")
     return 1
    return
   return
   Call.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 3, 'end...': 2, 'startpos': 0}")
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 3, 'end...': 2, 'startpos': 0}")
    return <Function object at 0>
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 3, 'end...': 2, 'startpos': 0}")
    return [7, 9, 8]
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 3, 'end...': 2, 'startpos': 0}")
    return 0
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 3, 'end...': 2, 'startpos': 0}")
    return 1
    Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [7, 9, 8], 'pos': 1, 'startpos': 0}")
     Index.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [7, 9, 8], 'pos': 1, 'startpos': 0}")
      Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [7, 9, 8], 'pos': 1, 'startpos': 0}")
      return [7, 9, 8]
      Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [7, 9, 8], 'pos': 1, 'startpos': 0}")
      return 1
     return 9
     Name.assign("9, {'_siftdown': <Funct...nction object at 0>}, {'heap': [7, 9, 8], 'pos': 1, 'startpos': 0}")
     return
    return
    While.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [7, 9, 8], ...': 1, 'startpos': 0}")
     Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [7, 9, 8], ...': 1, 'startpos': 0}")
      Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [7, 9, 8], ...': 1, 'startpos': 0}")
      return 1
      Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [7, 9, 8], ...': 1, 'startpos': 0}")
      return 0
     return True
     Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [7, 9, 8], ...': 1, 'startpos': 0}")
      Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [7, 9, 8], ...': 1, 'startpos': 0}")
       Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [7, 9, 8], ...': 1, 'startpos': 0}")
        Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [7, 9, 8], ...': 1, 'startpos': 0}")
        return 1
        Literal.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [7, 9, 8], ...': 1, 'startpos': 0}")
        return 1
       return 0
       Literal.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [7, 9, 8], ...': 1, 'startpos': 0}")
       return 1
      return 0
      Name.assign("0, {'_siftdown': <Funct...nction object at 0>}, {'heap': [7, 9, 8], ...': 1, 'startpos': 0}")
      return
     return
     Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [7, 9, 8], ...': 1, 'startpos': 0}")
      Index.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [7, 9, 8], ...': 1, 'startpos': 0}")
       Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [7, 9, 8], ...': 1, 'startpos': 0}")
       return [7, 9, 8]
       Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [7, 9, 8], ...': 1, 'startpos': 0}")
       return 0
      return 7
      Name.assign("7, {'_siftdown': <Funct...nction object at 0>}, {'heap': [7, 9, 8], ...': 1, 'startpos': 0}")
      return
     return
     If.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [7, 9, 8], ...': 1, 'startpos': 0}")
      Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [7, 9, 8], ...': 1, 'startpos': 0}")
       Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [7, 9, 8], ...': 1, 'startpos': 0}")
       return 7
       Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [7, 9, 8], ...': 1, 'startpos': 0}")
       return 9
      return True
      Break.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [7, 9, 8], ...': 1, 'startpos': 0}")
      raise <DoBreak instance at 0>
     raise <DoBreak instance at 0>
    return
    Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [7, 9, 8], ...': 1, 'startpos': 0}")
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [7, 9, 8], ...': 1, 'startpos': 0}")
     return 9
     Index.assign("9, {'_siftdown': <Funct...nction object at 0>}, {'heap': [7, 9, 8], ...': 1, 'startpos': 0}")
      Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [7, 9, 8], ...': 1, 'startpos': 0}")
      return [7, 9, 8]
      Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [7, 9, 8], ...': 1, 'startpos': 0}")
      return 1
     return
    return
   return
  return
 return
 Return.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [7, 9, 8], ... 9, 'returnitem': 6}")
  Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [7, 9, 8], ... 9, 'returnitem': 6}")
  return 6
 raise <DoReturn instance at 0>
 Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [7, 9, 8]}")
  Call.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [7, 9, 8]}")
   Attribute.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [7, 9, 8]}")
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [7, 9, 8]}")
    return [7, 9, 8]
   return <built-in method pop of list object at 0>
  return 8
  Name.assign("8, {'_siftdown': <Funct...nction object at 0>}, {'heap': [7, 9]}")
  return
 return
 If.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [7, 9], 'lastelt': 8}")
  Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [7, 9], 'lastelt': 8}")
  return [7, 9]
  Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [7, 9], 'lastelt': 8}")
   Index.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [7, 9], 'lastelt': 8}")
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [7, 9], 'lastelt': 8}")
    return [7, 9]
    Literal.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [7, 9], 'lastelt': 8}")
    return 0
   return 7
   Name.assign("7, {'_siftdown': <Funct...nction object at 0>}, {'heap': [7, 9], 'lastelt': 8}")
   return
  return
  Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [7, 9], 'la... 8, 'returnitem': 7}")
   Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [7, 9], 'la... 8, 'returnitem': 7}")
   return 8
   Index.assign("8, {'_siftdown': <Funct...nction object at 0>}, {'heap': [7, 9], 'la... 8, 'returnitem': 7}")
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [7, 9], 'la... 8, 'returnitem': 7}")
    return [7, 9]
    Literal.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [7, 9], 'la... 8, 'returnitem': 7}")
    return 0
   return
  return
  Call.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [8, 9], 'la... 8, 'returnitem': 7}")
   Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [8, 9], 'la... 8, 'returnitem': 7}")
   return <Function object at 0>
   Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [8, 9], 'la... 8, 'returnitem': 7}")
   return [8, 9]
   Literal.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [8, 9], 'la... 8, 'returnitem': 7}")
   return 0
   Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [8, 9], 'pos': 0}")
    Call.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [8, 9], 'pos': 0}")
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [8, 9], 'pos': 0}")
     return <built-in function len>
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [8, 9], 'pos': 0}")
     return [8, 9]
    return 2
    Name.assign("2, {'_siftdown': <Funct...nction object at 0>}, {'heap': [8, 9], 'pos': 0}")
    return
   return
   Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'endpos': 2, 'heap': [8, 9], 'pos': 0}")
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'endpos': 2, 'heap': [8, 9], 'pos': 0}")
    return 0
    Name.assign("0, {'_siftdown': <Funct...nction object at 0>}, {'endpos': 2, 'heap': [8, 9], 'pos': 0}")
    return
   return
   Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'endpos': 2, 'heap'...': 0, 'startpos': 0}")
    Index.eval("{'_siftdown': <Funct...nction object at 0>}, {'endpos': 2, 'heap'...': 0, 'startpos': 0}")
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'endpos': 2, 'heap'...': 0, 'startpos': 0}")
     return [8, 9]
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'endpos': 2, 'heap'...': 0, 'startpos': 0}")
     return 0
    return 8
    Name.assign("8, {'_siftdown': <Funct...nction object at 0>}, {'endpos': 2, 'heap'...': 0, 'startpos': 0}")
    return
   return
   Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'endpos': 2, 'heap'...': 0, 'startpos': 0}")
    Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'endpos': 2, 'heap'...': 0, 'startpos': 0}")
     Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'endpos': 2, 'heap'...': 0, 'startpos': 0}")
      Literal.eval("{'_siftdown': <Funct...nction object at 0>}, {'endpos': 2, 'heap'...': 0, 'startpos': 0}")
      return 2
      Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'endpos': 2, 'heap'...': 0, 'startpos': 0}")
      return 0
     return 0
     Literal.eval("{'_siftdown': <Funct...nction object at 0>}, {'endpos': 2, 'heap'...': 0, 'startpos': 0}")
     return 1
    return 1
    Name.assign("1, {'_siftdown': <Funct...nction object at 0>}, {'endpos': 2, 'heap'...': 0, 'startpos': 0}")
    return
   return
   While.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 0, 'startpos': 0}")
    Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 0, 'startpos': 0}")
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 0, 'startpos': 0}")
     return 1
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 0, 'startpos': 0}")
     return 2
    return True
    Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 0, 'startpos': 0}")
     Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 0, 'startpos': 0}")
      Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 0, 'startpos': 0}")
      return 1
      Literal.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 0, 'startpos': 0}")
      return 1
     return 2
     Name.assign("2, {'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 0, 'startpos': 0}")
     return
    return
    If.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
     Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
      Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
      return 2
      Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
      return 2
     return False
    return
    Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
     Index.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
      Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
      return [8, 9]
      Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
      return 1
     return 9
     Index.assign("9, {'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
      Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
      return [8, 9]
      Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
      return 0
     return
    return
    Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
     return 1
     Name.assign("1, {'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
     return
    return
    Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
     Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
      Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
       Literal.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
       return 2
       Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
       return 1
      return 2
      Literal.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
      return 1
     return 3
     Name.assign("3, {'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 2, 'startpos': 0}")
     return
    return
    Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 3, 'end...': 2, 'startpos': 0}")
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 3, 'end...': 2, 'startpos': 0}")
     return 3
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 3, 'end...': 2, 'startpos': 0}")
     return 2
    return False
   return
   Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 3, 'end...': 2, 'startpos': 0}")
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 3, 'end...': 2, 'startpos': 0}")
    return 8
    Index.assign("8, {'_siftdown': <Funct...nction object at 0>}, {'childpos': 3, 'end...': 2, 'startpos': 0}")
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 3, 'end...': 2, 'startpos': 0}")
     return [9, 9]
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 3, 'end...': 2, 'startpos': 0}")
     return 1
    return
   return
   Call.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 3, 'end...': 2, 'startpos': 0}")
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 3, 'end...': 2, 'startpos': 0}")
    return <Function object at 0>
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 3, 'end...': 2, 'startpos': 0}")
    return [9, 8]
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 3, 'end...': 2, 'startpos': 0}")
    return 0
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 3, 'end...': 2, 'startpos': 0}")
    return 1
    Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [9, 8], 'pos': 1, 'startpos': 0}")
     Index.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [9, 8], 'pos': 1, 'startpos': 0}")
      Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [9, 8], 'pos': 1, 'startpos': 0}")
      return [9, 8]
      Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [9, 8], 'pos': 1, 'startpos': 0}")
      return 1
     return 8
     Name.assign("8, {'_siftdown': <Funct...nction object at 0>}, {'heap': [9, 8], 'pos': 1, 'startpos': 0}")
     return
    return
    While.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [9, 8], 'ne...': 1, 'startpos': 0}")
     Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [9, 8], 'ne...': 1, 'startpos': 0}")
      Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [9, 8], 'ne...': 1, 'startpos': 0}")
      return 1
      Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [9, 8], 'ne...': 1, 'startpos': 0}")
      return 0
     return True
     Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [9, 8], 'ne...': 1, 'startpos': 0}")
      Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [9, 8], 'ne...': 1, 'startpos': 0}")
       Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [9, 8], 'ne...': 1, 'startpos': 0}")
        Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [9, 8], 'ne...': 1, 'startpos': 0}")
        return 1
        Literal.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [9, 8], 'ne...': 1, 'startpos': 0}")
        return 1
       return 0
       Literal.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [9, 8], 'ne...': 1, 'startpos': 0}")
       return 1
      return 0
      Name.assign("0, {'_siftdown': <Funct...nction object at 0>}, {'heap': [9, 8], 'ne...': 1, 'startpos': 0}")
      return
     return
     Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [9, 8], 'ne...': 1, 'startpos': 0}")
      Index.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [9, 8], 'ne...': 1, 'startpos': 0}")
       Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [9, 8], 'ne...': 1, 'startpos': 0}")
       return [9, 8]
       Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [9, 8], 'ne...': 1, 'startpos': 0}")
       return 0
      return 9
      Name.assign("9, {'_siftdown': <Funct...nction object at 0>}, {'heap': [9, 8], 'ne...': 1, 'startpos': 0}")
      return
     return
     If.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [9, 8], 'ne...': 1, 'startpos': 0}")
      Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [9, 8], 'ne...': 1, 'startpos': 0}")
       Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [9, 8], 'ne...': 1, 'startpos': 0}")
       return 9
       Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [9, 8], 'ne...': 1, 'startpos': 0}")
       return 8
      return False
     return
     Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [9, 8], 'ne...': 1, 'startpos': 0}")
      Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [9, 8], 'ne...': 1, 'startpos': 0}")
      return 9
      Index.assign("9, {'_siftdown': <Funct...nction object at 0>}, {'heap': [9, 8], 'ne...': 1, 'startpos': 0}")
       Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [9, 8], 'ne...': 1, 'startpos': 0}")
       return [9, 8]
       Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [9, 8], 'ne...': 1, 'startpos': 0}")
       return 1
      return
     return
     Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [9, 9], 'ne...': 1, 'startpos': 0}")
      Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [9, 9], 'ne...': 1, 'startpos': 0}")
      return 0
      Name.assign("0, {'_siftdown': <Funct...nction object at 0>}, {'heap': [9, 9], 'ne...': 1, 'startpos': 0}")
      return
     return
     Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [9, 9], 'ne...': 0, 'startpos': 0}")
      Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [9, 9], 'ne...': 0, 'startpos': 0}")
      return 0
      Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [9, 9], 'ne...': 0, 'startpos': 0}")
      return 0
     return False
    return
    Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [9, 9], 'ne...': 0, 'startpos': 0}")
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [9, 9], 'ne...': 0, 'startpos': 0}")
     return 8
     Index.assign("8, {'_siftdown': <Funct...nction object at 0>}, {'heap': [9, 9], 'ne...': 0, 'startpos': 0}")
      Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [9, 9], 'ne...': 0, 'startpos': 0}")
      return [9, 9]
      Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [9, 9], 'ne...': 0, 'startpos': 0}")
      return 0
     return
    return
   return
  return
 return
 Return.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [8, 9], 'la... 8, 'returnitem': 7}")
  Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [8, 9], 'la... 8, 'returnitem': 7}")
  return 7
 raise <DoReturn instance at 0>
 Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [8, 9]}")
  Call.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [8, 9]}")
   Attribute.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [8, 9]}")
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [8, 9]}")
    return [8, 9]
   return <built-in method pop of list object at 0>
  return 9
  Name.assign("9, {'_siftdown': <Funct...nction object at 0>}, {'heap': [8]}")
  return
 return
 If.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [8], 'lastelt': 9}")
  Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [8], 'lastelt': 9}")
  return [8]
  Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [8], 'lastelt': 9}")
   Index.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [8], 'lastelt': 9}")
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [8], 'lastelt': 9}")
    return [8]
    Literal.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [8], 'lastelt': 9}")
    return 0
   return 8
   Name.assign("8, {'_siftdown': <Funct...nction object at 0>}, {'heap': [8], 'lastelt': 9}")
   return
  return
  Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [8], 'lastelt': 9, 'returnitem': 8}")
   Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [8], 'lastelt': 9, 'returnitem': 8}")
   return 9
   Index.assign("9, {'_siftdown': <Funct...nction object at 0>}, {'heap': [8], 'lastelt': 9, 'returnitem': 8}")
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [8], 'lastelt': 9, 'returnitem': 8}")
    return [8]
    Literal.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [8], 'lastelt': 9, 'returnitem': 8}")
    return 0
   return
  return
  Call.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [9], 'lastelt': 9, 'returnitem': 8}")
   Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [9], 'lastelt': 9, 'returnitem': 8}")
   return <Function object at 0>
   Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [9], 'lastelt': 9, 'returnitem': 8}")
   return [9]
   Literal.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [9], 'lastelt': 9, 'returnitem': 8}")
   return 0
   Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [9], 'pos': 0}")
    Call.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [9], 'pos': 0}")
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [9], 'pos': 0}")
     return <built-in function len>
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [9], 'pos': 0}")
     return [9]
    return 1
    Name.assign("1, {'_siftdown': <Funct...nction object at 0>}, {'heap': [9], 'pos': 0}")
    return
   return
   Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'endpos': 1, 'heap': [9], 'pos': 0}")
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'endpos': 1, 'heap': [9], 'pos': 0}")
    return 0
    Name.assign("0, {'_siftdown': <Funct...nction object at 0>}, {'endpos': 1, 'heap': [9], 'pos': 0}")
    return
   return
   Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'endpos': 1, 'heap'...': 0, 'startpos': 0}")
    Index.eval("{'_siftdown': <Funct...nction object at 0>}, {'endpos': 1, 'heap'...': 0, 'startpos': 0}")
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'endpos': 1, 'heap'...': 0, 'startpos': 0}")
     return [9]
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'endpos': 1, 'heap'...': 0, 'startpos': 0}")
     return 0
    return 9
    Name.assign("9, {'_siftdown': <Funct...nction object at 0>}, {'endpos': 1, 'heap'...': 0, 'startpos': 0}")
    return
   return
   Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'endpos': 1, 'heap'...': 0, 'startpos': 0}")
    Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'endpos': 1, 'heap'...': 0, 'startpos': 0}")
     Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'endpos': 1, 'heap'...': 0, 'startpos': 0}")
      Literal.eval("{'_siftdown': <Funct...nction object at 0>}, {'endpos': 1, 'heap'...': 0, 'startpos': 0}")
      return 2
      Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'endpos': 1, 'heap'...': 0, 'startpos': 0}")
      return 0
     return 0
     Literal.eval("{'_siftdown': <Funct...nction object at 0>}, {'endpos': 1, 'heap'...': 0, 'startpos': 0}")
     return 1
    return 1
    Name.assign("1, {'_siftdown': <Funct...nction object at 0>}, {'endpos': 1, 'heap'...': 0, 'startpos': 0}")
    return
   return
   While.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 0, 'startpos': 0}")
    Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 0, 'startpos': 0}")
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 0, 'startpos': 0}")
     return 1
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 0, 'startpos': 0}")
     return 1
    return False
   return
   Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 0, 'startpos': 0}")
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 0, 'startpos': 0}")
    return 9
    Index.assign("9, {'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 0, 'startpos': 0}")
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 0, 'startpos': 0}")
     return [9]
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 0, 'startpos': 0}")
     return 0
    return
   return
   Call.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 0, 'startpos': 0}")
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 0, 'startpos': 0}")
    return <Function object at 0>
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 0, 'startpos': 0}")
    return [9]
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 0, 'startpos': 0}")
    return 0
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'childpos': 1, 'end...': 0, 'startpos': 0}")
    return 0
    Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [9], 'pos': 0, 'startpos': 0}")
     Index.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [9], 'pos': 0, 'startpos': 0}")
      Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [9], 'pos': 0, 'startpos': 0}")
      return [9]
      Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [9], 'pos': 0, 'startpos': 0}")
      return 0
     return 9
     Name.assign("9, {'_siftdown': <Funct...nction object at 0>}, {'heap': [9], 'pos': 0, 'startpos': 0}")
     return
    return
    While.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [9], 'newit...': 0, 'startpos': 0}")
     Binop.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [9], 'newit...': 0, 'startpos': 0}")
      Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [9], 'newit...': 0, 'startpos': 0}")
      return 0
      Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [9], 'newit...': 0, 'startpos': 0}")
      return 0
     return False
    return
    Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [9], 'newit...': 0, 'startpos': 0}")
     Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [9], 'newit...': 0, 'startpos': 0}")
     return 9
     Index.assign("9, {'_siftdown': <Funct...nction object at 0>}, {'heap': [9], 'newit...': 0, 'startpos': 0}")
      Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [9], 'newit...': 0, 'startpos': 0}")
      return [9]
      Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [9], 'newit...': 0, 'startpos': 0}")
      return 0
     return
    return
   return
  return
 return
 Return.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [9], 'lastelt': 9, 'returnitem': 8}")
  Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [9], 'lastelt': 9, 'returnitem': 8}")
  return 8
 raise <DoReturn instance at 0>
 Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [9]}")
  Call.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [9]}")
   Attribute.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [9]}")
    Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [9]}")
    return [9]
   return <built-in method pop of list object at 0>
  return 9
  Name.assign("9, {'_siftdown': <Funct...nction object at 0>}, {'heap': []}")
  return
 return
 If.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [], 'lastelt': 9}")
  Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [], 'lastelt': 9}")
  return []
  Assign.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [], 'lastelt': 9}")
   Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [], 'lastelt': 9}")
   return 9
   Name.assign("9, {'_siftdown': <Funct...nction object at 0>}, {'heap': [], 'lastelt': 9}")
   return
  return
 return
 Return.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [], 'lastelt': 9, 'returnitem': 9}")
  Name.eval("{'_siftdown': <Funct...nction object at 0>}, {'heap': [], 'lastelt': 9, 'returnitem': 9}")
  return 9
 raise <DoReturn instance at 0>
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
