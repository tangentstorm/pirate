## pirate standard library

#
# python print routine (special case for lists)
# @TODO: make this return a string and call it str() 
#
.pcc_sub __py__print non_prototyped
    .param object s
    .param int nested
    typeof $S0, s
    if $S0 == "PerlArray" goto list
    if $S0 == "PerlHash" goto dict
        unless $S0 == "PerlString" goto noquote
        if nested goto quote
        noquote:
            print s
            goto done
        quote:
            print "'"
            print s
            print "'"
        goto done
    list:
        .local int len
        .local int i
        .local object item

        print "["
        len = s
        i = 0
        loop:
            if i >= len goto endloop
            item = s[i]
            __py__print(item,1)
            i = i + 1
            if i >= len goto endloop
            print ", "
            goto loop
        endloop:
        print "]"
        goto done

    dict:
        unless s goto empty
            .local object iter
            .local object key
            .local object val
            .local string skey
            key = new PerlString

            print "{"
            iter = new Iterator, s
            iter = 0  # reset it 
            unless iter goto enddict
                shift skey, iter
                key = skey
                __py__print(key,1)
                print ": "
                val = s[skey]
                __py__print(val,1)
            enddict:
               print "}"
            goto done
        empty:
            print "{}"
        goto done

    done:
    .pcc_begin_return
    .pcc_end_return
.end

#
# getattr()
#
.pcc_sub __py__getattr non_prototyped
    .param object obj
    .param string name
    #@TODO: .param ifNone

    .local object result
    .local object class

    ## first try the obj
    getprop result, name, obj
    typeof $S0, result
    unless $S0 == 'PerlUndef' goto done

    ## next look for a __class__
    getprop class, '__class__', obj
    typeof $S0, class
    if $S0 == 'PerlUndef' goto noClass

    ## we have a class, so look for the attribute
    getprop result, name, class
    typeof $S0, result
    unless $S0 == 'PerlUndef' goto done

noClass:

notFound:
    $S0 = "AttributeError: "
    concat $S0, name
    __py__raise($S0)

done:
    .pcc_begin_return
    .return result
    .pcc_end_return
.end


#
# raise
#
.pcc_sub __py__raise
    .param string message
    new $P0, .Exception
    $P0["_message"] = message
    throw $P0
    .pcc_begin_return
    .pcc_end_return
.end


#
# top level python exception handler
#
.pcc_sub __py__catch non_prototyped
    set S0, P5['_message'] # P5 is the exception object
    print S0
    print "\n"
    end
    .pcc_begin_return
    .pcc_end_return
.end
